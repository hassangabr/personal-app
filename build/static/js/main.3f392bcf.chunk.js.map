{"version":3,"sources":["hoc/AuxC.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","shared/Utility.js","store/actions/actionTypes.js","store/actions/authAction.js","store/actions/userAction.js","store/actions/skillsAction.js","store/actions/portfolioAction.js","store/actions/resumeActions.js","containers/auth/auth.js","components/UI/spanButton/spanButton.js","containers/getDataForms/UserData/UserData.js","containers/getDataForms/SkillsData/SkillsData.js","containers/getDataForms/ResumeData/ResumeData.js","containers/getDataForms/PortfolioData/PortfolioData.js","components/navigation/navigationItem/navigationItem.js","components/navigation/navigationItems/navigationItems.js","hoc/Layout/Layout.js","components/skills/skill/skill.js","components/skills/skills.js","components/about/about.js","containers/Home/Home.js","components/resume/resumeComponent.js","containers/resume/resume.js","components/portfolio/portfolioComponent.js","containers/portfolios/portfolio.js","containers/auth/Logout/Logout.js","containers/ChooseTask/ChooseTask.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/userReducer.js","store/reducers/skillsReducer.js","store/reducers/portfolioReducer.js","store/reducers/resumeReducer.js","store/sagas/authSaga.js","axios-order.js","store/sagas/userSaga.js","store/sagas/skillsSaga.js","store/sagas/portfolioSaga.js","store/sagas/resumeSaga.js","store/sagas/indexSaga.js","index.js","assets/choose-task.jpeg"],"names":["aux","props","children","library","add","faCamera","input","inputElement","inputClasses","UploadImage","isValid","shouldValidate","touched","push","elementType","react_default","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","AuxC","file","accept","react_fontawesome_index_es","icon","src","alt","classes","button","buttonClasses","onClick","clicked","disabled","spinner","updateObject","oldObject","updatedProp","objectSpread","checkValidity","rule","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","AUTH_USER","AUTH_CHECK_TIMEOUT","AUTH_INITIATE_LOGOUT","AUTH_CHECK_STATE","SUBMIT_DATA","FETCH_USER","CHECK_USER_REQUESR_ID_STATE","SUBMIT_SKILLS","FETCH_SKILLS","CHECK_SKILLS_REQUEST_ID_STATE","SUBMIT_PORTFOLIO","FETCH_PORTFOLIO","CHECK_PORTFOLIO_REQUESTID_STATE","SUBMIT_RESUME","FETCH_RESUME","CHECK_RESUME_REQUEST_ID_STATE","authStart","type","authSuccess","token","userId","idToken","authFail","error","authCheckTimeOut","expirationTime","actionTypes","logout","logoutSucceed","setAuthRedirect","path","submitDataStart","submitDataSuccess","id","requestId","submitDataFail","fetchUserStart","fetchUserSuccess","userData","fetchUserFail","fetchUserRequestIdSuccess","submitSkillsStart","submitSkillsSuccess","submitSkillsFail","fetchSkills","fetchSkillsStart","fetchSkillsSuccess","skills","fetchSkillsFail","fetchSkillsRequestIdFromLocalSuccess","submitPortfolioStart","submitPortfolioSuccess","submitPortfolioFail","fetchPortfolioStart","fetchPortfolioSuccess","portfolioData","fetchPortfolioFail","fetchRequestIdFromLocalSuccess","submitResumeStart","submitResumeSuccess","submitResumeFail","fetchResumeStart","fetchResumeSuccess","resumeData","fetchResumeFail","fetchResumeRequestIdFromLocalSuccess","Auth","state","inputs","email","config","placeholder","validation","valid","password","isLogin","redirect","inputChangeHandler","event","controlName","updateInputs","_this","defineProperty","target","setState","switchAuthHandler","preventDefault","prevState","onAuthRedirect","submitHandler","onAuthUser","_this2","this","formElementArray","key","form","map","formElement","Input_Input","loading","Spinner_Spinner","isAuthenticated","react_router","to","errorMessage","message","Container","Row","Col","lg","onSubmit","Button_Button","Component","connect","auth","authRedirectPath","dispatch","actions","spanButton","UserData","profile","fname","lname","jobTitle","birth","phone","bio","uploadImage","formIsValid","inputName","addProfileImage","reader","FileReader","files","fileReader","onloadend","result","readAsDataURL","onSubmitHandler","profilePic","personalData","info","onSubmitData","userRedirectPath","onUserRedirect","formInputsArray","configer","onDrop","submited","UI_spanButton_spanButton","user","data","faPlus","SkillsData","skill_0","rate_0","i","addFormHandler","_updateObject2","incI","addInput","skillsData","skillsInfo","onSubmitSkills","setSkillsRedirect","onSetSkillsRedirect","ResumeData","title_0","companyName_0","position_0","from_0","to_0","description_0","onSubmitResume","resumeRedirect","onSetResumeRedirect","resume","setResumeRedirect","PortfolioData","thumbnail_0","link_0","addThumbnailImage","updateImage","portData","onSubmitPort","portRedirect","onSetPortRedirect","formElemnt","port","setPortfolioRedirect","navigationItem","react_router_dom","link","exact","activeClassName","faUserAlt","faBriefcase","faGripHorizontal","faSignOutAlt","faCogs","navigationItems","show","navigation_navigationItem_navigationItem","Layout","showNav","navToggleHandler","reachHome","navigation_navigationItems_navigationItems","skill","style","width","rate","Skills","onFetch","skillElement","skills_skill_skill","faCalendarAlt","faAt","faPhoneVolume","About","xl","object","hasOwnProperty","isEmpty","Home","onNav","about","skills_skills","faStar","faPenAlt","resumeComponent","title","company","position","from","description","Resume","resumes","resumeElements","components_resume_resumeComponent","portfolio","img","pathname","Portfolio","Ports","portElement","portfolio_portfolioComponent","thumbnail","Logout","outApp","onLogout","ChooseTask","userRequestId","skillsRequestId","resumeRequestId","portRequestId","chooseTaskImage","App","onAutoLogin","onCheckPortfolioRequestId","onCheckResumeRequestId","onCheckSkillsRequestId","onCheckUserRequestId","routes","component","hoc_Layout_Layout","Boolean","window","location","hostname","match","initialState","reducer","arguments","undefined","action","authLogout","setUserRedirectPath","fetchDataStart","fetchDataSuccess","fetchDataFail","skillsSubmitStart","skillsSubmitSuccess","skillsSubmitFail","authSaga","authCheckState","authData","url","response","expirationDate","regenerator_default","wrap","_context","prev","next","put","returnSecureToken","axios","post","sent","Date","getTime","expiresIn","localStorage","setItem","localId","t0","stop","_marked","_context2","call","_marked2","_context3","delay","_marked3","_context4","getItem","_marked4","instance","create","baseURL","submitData","fetchUserSaga","checkUserRequestIdState","name","userSaga_marked","queryParms","get","userSaga_marked2","userSaga_marked3","submitSkillsSaga","fetchSkillsSaga","checkSkillsRequestIdState","skillsSaga_marked","queryParams","skillsArray","_key","skillsArrayArrenge","skillsSaga_marked2","skillsSaga_marked3","submitPortfolio","fetchPortfolio","checkPortfolioRequestIdState","portfolioSaga_marked","fetchPorts","portsArray","portsArrayArrange","portfolioSaga_marked2","portfolioSaga_marked3","submitResume","fetchResume","checkResumeRequestIdState","resumeSaga_marked","_fetchResume","resumeArray","resumeArrayArrange","resumeSaga_marked2","resumeSaga_marked3","watchAuth","watchPersonalData","watchSkillsData","watchPortfolioData","watchResumeData","all","takeEvery","indexSaga_marked","indexSaga_marked2","indexSaga_marked3","indexSaga_marked4","_context5","_marked5","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","userReducer","skillsReducer","portfolioReducer","resumeReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3f392bcf.chunk.js","sourcesContent":["const aux = ( props ) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\n// import ImageUploader from 'react-images-upload';\r\nimport Aux from '../../../hoc/AuxC';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport './Input.scss';\r\n\r\nlibrary.add(faCamera);\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [\"input\"];\r\n    const UploadImage = [\"upload\"];\r\n    if ( props.isValid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(\"Invalid\");\r\n        UploadImage.push(\"Invalid\");\r\n    }\r\n    switch ( props.elementType ) {\r\n        case 'input':\r\n            inputElement = <input \r\n                                className = {inputClasses.join(' ')}\r\n                                {...props.elementConfig}\r\n                                value = {props.value}\r\n                                onChange = {props.changed}\r\n                            />\r\n            break;\r\n        case 'textarea':\r\n            inputElement = <Aux>\r\n                                <textarea \r\n                                    className = {inputClasses.join(' ')}\r\n                                    {...props.elementConfig}\r\n                                    value = {props.value}\r\n                                    onChange = {props.changed}\r\n                                />\r\n                                <div className=\"seperate\"></div>\r\n                            </Aux>\r\n            break;\r\n        case 'inputFile':\r\n            inputClasses.push(\"file\");\r\n            inputElement = <Aux>\r\n                                <div className=\"seperate\"></div>\r\n                                <input \r\n                                    className = {inputClasses.join(' ')}\r\n                                    {...props.elementConfig}\r\n                                    onChange = {props.file}\r\n                                    accept = \"image/*\"\r\n                                />\r\n                                <div className={UploadImage.join(' ')}>\r\n                                    <FontAwesomeIcon icon={faCamera}/>\r\n                                    <img src={props.src} alt=\"\" className=\"img-fluid d-block mx-auto\"/>\r\n                                </div>\r\n                           </Aux>\r\n            break;\r\n        case 'select':\r\n            inputElement = <select></select>\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                                className = {inputClasses.join(' ')}\r\n                                {...props.elementConfig}\r\n                                value = {props.value}\r\n                                onChange = {props.changed}\r\n                            />\r\n    }\r\n    return (\r\n        <div className={[\"input-group\", props.classes].join(' ')}>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst button = ( props ) => {\r\n    let buttonClasses = [\"button\"];\r\n    buttonClasses.push(props.classes);\r\n    return (\r\n        <button onClick={props.clicked} className={buttonClasses.join(' ')} disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default button;\r\n","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"spinner\">\r\n                <div className=\"bounce1\"></div>\r\n                <div className=\"bounce2\"></div>\r\n                <div className=\"bounce3\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default spinner;","export const updateObject = (oldObject, updatedProp) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProp\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rule) => {\r\n    let isValid = true;\r\n    if (!rule) {\r\n        return true;\r\n    }\r\n    if (rule.required) {\r\n        isValid = value.trim() !==  '' && isValid;\r\n    }\r\n    if (rule.minLength) {\r\n        isValid = value.length >= rule.minLength && isValid;\r\n    }\r\n    if (rule.maxLength) {\r\n        isValid = value.length <= rule.maxLength && isValid\r\n    }\r\n    if (rule.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rule.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n    return isValid;\r\n}","export const AUTH_USER = 'AUTH_USER';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_INITIATE_LOGOUT = 'AUTH_INITIATE_LOGOUT';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const AUTH_CHECK_STATE = 'AUTH_CHECK_STATE';\r\nexport const SET_AUTH_REDIRECT = 'SET_AUTH_REDIRECT';\r\nexport const REACH_HOME = 'REACH_HOME';\r\nexport const OUT_APP = 'OUT_APP';\r\n\r\nexport const SUBMIT_DATA = 'SUBMIT_DATA';\r\nexport const SUBMIT_DATA_START = 'SUBMIT_DATA_START';\r\nexport const SUBMIT_DATA_SUCCESS = 'SUBMIT_DATA_SUCCESS';\r\nexport const SUBMIT_DATA_FAIL = 'SUBMIT_DATA_FAIL';\r\nexport const SET_USER_REDIRECT = 'SET_USER_REDIRECT';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const FETCH_USER_START = 'FETCH_USER_START';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\r\nexport const CHECK_USER_REQUESR_ID_STATE = 'CHECK_USER_REQUESR_ID_STATE';\r\nexport const FETCH_USER_REQUEST_ID_SUCCESS = 'FETCH_USER_REQUEST_ID_SUCCESS';\r\n\r\nexport const SUBMIT_SKILLS = 'SUBMIT_SKILLS';\r\nexport const SUBMIT_SKILLS_START = 'SUBMIT_SKILLS_START';\r\nexport const SUBMIT_SKILLS_SUCCESS = 'SUBMIT_SKILLS_SUCCESS';\r\nexport const SUBMIT_SKILLS_FAIL = 'SUBMIT_SKILLS_FAIL';\r\nexport const SET_SKILLS_REDIRECT = 'SET_SKILLS_REDIRECT';\r\nexport const FETCH_SKILLS = 'FETCH_SKILLS';\r\nexport const FETCH_SKILLS_START = 'FETCH_SKILLS_START';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CHECK_SKILLS_REQUEST_ID_STATE = 'CHECK_SKILLS_REQUEST_ID_STATE';\r\nexport const FETCH_SKILLS_REQUEST_ID_FROM_LOCAL_SUCCESS = 'FETCH_SKILLS_REQUEST_ID_FROM_LOCAL_SUCCESS';\r\n\r\nexport const SUBMIT_PORTFOLIO = 'SUBMIT_PORTFOLIO';\r\nexport const SUBMIT_PORTFOLIO_START = 'SUBMIT_PORTFOLIO_START';\r\nexport const SUBMIT_PORTFOLIO_SUCCESS = 'SUBMIT_PORTFOLIO_SUCCESS';\r\nexport const SUBMIT_PORTFOLIO_FAIL = 'SUBMIT_PORTFOLIO_FAIL';\r\nexport const SET_PORTFOLIO_REDIRECT = 'SET_PORTFOLIO_REDIRECT';\r\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\r\nexport const FETCH_PORTFOLIO_START = 'FETCH_PORTFOLIO_START';\r\nexport const FETCH_PORTFOLIO_SUCCESS = 'FETCH_PORTFOLIO_SUCCESS';\r\nexport const FETCH_PORTFOLIO_FAIL = 'FETCH_PORTFOLIO_FAIL';\r\nexport const CHECK_PORTFOLIO_REQUESTID_STATE = 'CHECK_PORTFOLIO_REQUESTID_STATE';\r\nexport const FETCH_PORT_REQUESTID_FROM_LOCAL_SUCCESS = 'FETCH_PORT_REQUESTID_FROM_LOCAL_SUCCESS';\r\n\r\nexport const SUBMIT_RESUME = 'SUBMIT_RESUME';\r\nexport const SUBMIT_RESUME_START = 'SUBMIT_RESUME_START';\r\nexport const SUBMIT_RESUME_SUCCESS = 'SUBMIT_RESUME_SUCCESS';\r\nexport const SUBMIT_RESUME_FAIL = 'SUBMIT_RESUME_FAIL';\r\nexport const SET_RESUME_REDIRECT = 'SET_RESUME_REDIRECT';\r\nexport const FETCH_RESUME = 'FETCH_RESUME';\r\nexport const FETCH_RESUME_START = 'FETCH_RESUME_START';\r\nexport const FETCH_RESUME_SUCCESS = 'FETCH_RESUME_SUCCESS';\r\nexport const FETCH_RESUME_FAIL = 'FETCH_RESUME_FAIL';\r\nexport const CHECK_RESUME_REQUEST_ID_STATE = 'CHECK_RESUME_REQUEST_ID_STATE';\r\nexport const FETCH_RESUME_REQUEST_ID_FROM_LOCAL_SUCCESS = 'FETCH_RESUME_REQUEST_ID_FROM_LOCAL_SUCCESS';","import * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken : token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const authUser = (email, password, isLogin) => {\r\n    return {\r\n        type: actionTypes.AUTH_USER,\r\n        email: email,\r\n        password: password,\r\n        isLogin: isLogin\r\n    }\r\n}\r\n\r\nexport const authCheckTimeOut = (expirationTime) => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\r\n        expirationTime: expirationTime\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionTypes.AUTH_INITIATE_LOGOUT\r\n    }\r\n}\r\n\r\nexport const logoutSucceed = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_STATE\r\n    }\r\n}\r\n\r\nexport const setAuthRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const reachHome = () => {\r\n    return {\r\n        type: actionTypes.REACH_HOME\r\n    }\r\n}\r\n\r\nexport const outApp = () => {\r\n    return {\r\n        type: actionTypes.OUT_APP\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitData = (token, personalData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA,\r\n        data: personalData,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const submitDataStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_START\r\n    }\r\n}\r\n\r\nexport const submitDataSuccess = (id) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_SUCCESS,\r\n        requestId: id\r\n    }\r\n}\r\n\r\nexport const submitDataFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setUserRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_USER_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchUser = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchUserStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_START\r\n    }\r\n}\r\n\r\nexport const fetchUserSuccess = (userData) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_SUCCESS,\r\n        userData: userData\r\n    }\r\n}\r\n\r\nexport const fetchUserFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const checkUserRequestIdState = () => {\r\n    return {\r\n        type: actionTypes.CHECK_USER_REQUESR_ID_STATE\r\n    }\r\n}\r\n\r\nexport const fetchUserRequestIdSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_REQUEST_ID_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitSkills = (token, skillsData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS,\r\n        token: token,\r\n        skillsData: skillsData\r\n    }\r\n}\r\n\r\nexport const submitSkillsStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_START\r\n    }\r\n}\r\n\r\nexport const submitSkillsSuccess = (id) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_SUCCESS,\r\n        requestId: id\r\n      \r\n    }\r\n}\r\n\r\nexport const submitSkillsFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setSkillsRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_SKILLS_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchSkills = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchSkillsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_START\r\n    }\r\n}\r\n\r\nexport const fetchSkillsSuccess = (skills) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_SUCCESS,\r\n        skills: skills\r\n    }\r\n}\r\n\r\nexport const fetchSkillsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const checkSkillsRequestIdState = () => {\r\n    return {\r\n        type: actionTypes.CHECK_SKILLS_REQUEST_ID_STATE\r\n    }\r\n}\r\n\r\nexport const fetchSkillsRequestIdFromLocalSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_REQUEST_ID_FROM_LOCAL_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitPortfolio = (token, portfolioData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO,\r\n        token: token,\r\n        portfolioData: portfolioData\r\n    }\r\n}\r\n\r\nexport const submitPortfolioStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_START\r\n    }\r\n}\r\n\r\nexport const submitPortfolioSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}\r\n\r\nexport const submitPortfolioFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setPortfolioRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_PORTFOLIO_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchPortfolio = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_START\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioSuccess = (portfolioData) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_SUCCESS,\r\n        portfolioData: portfolioData\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const checkPortfolioRequestIdState = () => {\r\n    return {\r\n        type: actionTypes.CHECK_PORTFOLIO_REQUESTID_STATE\r\n    }\r\n}\r\n\r\nexport const fetchRequestIdFromLocalSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORT_REQUESTID_FROM_LOCAL_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitResume = (token, resumeData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME,\r\n        token: token,\r\n        resumeData: resumeData\r\n    };\r\n};\r\n\r\nexport const submitResumeStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_START\r\n    };\r\n};\r\n\r\nexport const submitResumeSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_SUCCESS,\r\n        requestId: requestId\r\n    };\r\n};\r\n\r\nexport const submitResumeFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const setResumeRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_RESUME_REDIRECT,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const fetchResume = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchResumeStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_START\r\n    }\r\n}\r\n\r\nexport const fetchResumeSuccess = (resumeData) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_SUCCESS,\r\n        resumeData: resumeData\r\n    }\r\n}\r\n\r\nexport const fetchResumeFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const checkResumeRequestIdState  = () => {\r\n    return {\r\n        type: actionTypes.CHECK_RESUME_REQUEST_ID_STATE\r\n    }\r\n}\r\n\r\nexport const fetchResumeRequestIdFromLocalSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_REQUEST_ID_FROM_LOCAL_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { updateObject, checkValidity } from '../../shared/Utility';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport './auth.scss';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        inputs: {\r\n            email: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'email',\r\n                    placeholder: 'Type your email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'password',\r\n                    placeholder: 'Type a strong password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isLogin:true,\r\n        redirect: '/home'\r\n    }\r\n\r\n\r\n    inputChangeHandler = (event, controlName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [controlName]: updateObject(this.state.inputs[controlName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[controlName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        this.setState({inputs: updateInputs});\r\n    }\r\n\r\n    switchAuthHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => {\r\n            return {isLogin: !prevState.isLogin}\r\n        }, () => {\r\n            if (this.state.isLogin) {\r\n                this.setState(prevState => {\r\n                    return {redirect: prevState.redirect= '/home'}\r\n                }, () => this.props.onAuthRedirect(this.state.redirect));\r\n            }\r\n            if (!this.state.isLogin) {\r\n                this.setState(prevState => {\r\n                    return {redirect: prevState.redirect= '/chooseTask'}\r\n                }, () => this.props.onAuthRedirect(this.state.redirect))\r\n            }\r\n        });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuthUser(this.state.inputs.email.value, this.state.inputs.password.value, this.state.isLogin);\r\n    }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.inputs[key]\r\n            })\r\n        }\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.config.elementType}\r\n                elementConfig = {formElement.config.config}\r\n                value = {formElement.config.value}\r\n                isValid = {!formElement.config.valid}\r\n                touched = {formElement.config.touched}\r\n                shouldValidate = {formElement.config.validation}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if ( this.props.isAuthenticated && this.state.isLogin ) {\r\n            redirect = <Redirect to = '/home'/>\r\n        }\r\n\r\n        if ( this.props.isAuthenticated && !this.state.isLogin ) {\r\n            redirect = <Redirect to = '/chooseTask'/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"auth\">\r\n                {redirect}\r\n                <Container>\r\n                    <Row className=\"justify-content-center align-items-center\">\r\n                        <Col lg = '6' className=\"content\">\r\n                            {spinner}\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <h2>{this.state.isLogin? \"Log in to your profile\" : \"Create Your own profile\"} </h2>\r\n                                {errorMessage}\r\n                                {form}\r\n                                <Button>{this.state.isLogin? \"Log in\": \"Sign up\"}</Button>\r\n                            </form>\r\n                            <div className=\"seperate\"></div>\r\n                            <p>\r\n                                    {\r\n                                        this.state.isLogin? \r\n                                           \"You don't have an account?\"\r\n                                           :\r\n                                           \"Already have an account?\"\r\n                                    }\r\n                            </p>\r\n                            <Button classes=\"switch\" clicked = {this.switchAuthHandler}>\r\n                                {this.state.isLogin? \"Sign up\": \"Log in\"}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n        isAuthenticated: state.auth.token !== null,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuthUser: (email, password, isLogin) => dispatch(actions.authUser(email, password, isLogin)),\r\n        onAuthRedirect: (path) => dispatch(actions.setAuthRedirect(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport './spanButton.scss';\r\n\r\nconst spanButton = () => (\r\n    <span className=\"span-button\">\r\n        Next\r\n    </span>\r\n);\r\n\r\nexport default spanButton;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport '../formsData.scss';\r\n\r\nclass UserData extends Component {\r\n    state = {\r\n        inputs : {\r\n            profile : {\r\n                elementType: 'inputFile',\r\n                config: {\r\n                    type: 'file',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            },\r\n            fname : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your first name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            lname : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your last name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            jobTitle : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your job title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true, \r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            birth : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'date',\r\n                    placeholder: 'Date of birth'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            phone : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your phone number'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 11,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            email : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'email',\r\n                    placeholder: 'Type your email address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            bio : {\r\n                elementType: 'textarea',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Tell us about yourself'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-12'\r\n            },\r\n        },\r\n        uploadImage: '',\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.userRedirectPath !== '/chooseTask') {\r\n            this.props.onUserRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid: formIsValid});\r\n    }\r\n\r\n    addProfileImage = (event) => {\r\n        event.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        const fileReader = updateObject(this.state.inputs, {\r\n            \"profile\" : {\r\n                ...this.state.inputs.profile,\r\n                touched:true,\r\n                valid:true\r\n            }\r\n        })\r\n        reader.onloadend = () => {\r\n            this.setState({uploadImage: reader.result, inputs:fileReader})\r\n        };\r\n        if ( event.target.files[0] ) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const userData = {};\r\n        for ( let key in this.state.inputs) {\r\n            userData[key] = this.state.inputs[key].value\r\n        }\r\n        const profilePic = this.state.uploadImage;\r\n        const personalData = {\r\n            info: {\r\n                ...userData,\r\n                \"profile\": profilePic\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitData(this.props.token, personalData);\r\n    }\r\n\r\n    render () {\r\n        const formInputsArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formInputsArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formInputsArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                value = {formElement.configer.value}\r\n                elementType = {formElement.configer.elementType}\r\n                touched = {formElement.configer.touched}\r\n                isValid = {!formElement.configer.valid}\r\n                shouldValidate = {formElement.configer.validation}\r\n                elementConfig = {formElement.configer.config}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n                classes = {formElement.configer.classes}\r\n                onDrop = {this.onDrop}\r\n                file = {(event) => this.addProfileImage(event)}\r\n                src = {this.state.uploadImage}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.submited) {\r\n            redirect = <Redirect to = {this.props.userRedirectPath} />\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n\r\n        return (\r\n            <section className=\"data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.onSubmitHandler}>\r\n                        {spinner}\r\n                        <h2>Start creating your profile</h2>\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.user.loading,\r\n        userRedirectPath: state.user.userRedirectPath,\r\n        submited: state.user.requestId !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitData: (token, data) => dispatch(actions.submitData(token, data)),\r\n        onUserRedirect: () => dispatch(actions.setUserRedirectPath('/chooseTask'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserData);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport '../formsData.scss';\r\n\r\nlibrary.add(faPlus);\r\n\r\nclass SkillsData extends Component {\r\n    state = {\r\n        inputs: {\r\n            skill_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your skill'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            rate_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type this skill rate'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    maxLength: 3,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.setSkillsRedirect !== '/chooseTask') {\r\n            this.props.onSetSkillsRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid: formIsValid});\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"skill_\" + i] : {\r\n                ...this.state.inputs[\"skill_0\"],\r\n                value: '',\r\n                touched: false,\r\n                valid: false\r\n            },\r\n            [\"rate_\" + i] : {\r\n                ...this.state.inputs[\"rate_0\"],\r\n                value: '',\r\n                touched: false,\r\n                valid: false\r\n            },\r\n        });\r\n        this.setState({inputs:addInput, i:incI.i, formIsValid: false});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const skillsData = {};\r\n        for (let key in this.state.inputs) {\r\n            skillsData[key] = this.state.inputs[key].value\r\n        }\r\n        const skillsInfo = {\r\n            info: {\r\n                ...skillsData\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitSkills(this.props.token, skillsInfo);\r\n    }\r\n\r\n    render () {\r\n        const formInputsArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formInputsArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formInputsArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.configer.elementType}\r\n                value = {formElement.configer.value}\r\n                touched = {formElement.configer.touched}\r\n                elementConfig = {formElement.configer.config}\r\n                classes = {formElement.configer.classes}\r\n                shouldValidate = {formElement.configer.validation}\r\n                isValid = {!formElement.configer.valid}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId) {\r\n            redirect = <Redirect to = {this.props.setSkillsRedirect}/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"skill-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start Adding your Skills</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add Another skill?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        token: state.auth.token,\r\n        loading: state.skills.loading,\r\n        requestId: state.skills.requestId !== null,\r\n        setSkillsRedirect: state.skills.setSkillsRedirect,\r\n        error: state.skills.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitSkills: (token, data) => dispatch(actions.submitSkills(token, data)),\r\n        onSetSkillsRedirect: () => dispatch(actions.setSkillsRedirect('/chooseTask'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillsData);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport '../formsData.scss'; \r\n\r\nlibrary.add(faPlus);\r\n\r\nclass ResumeData extends Component {\r\n    state = {\r\n        inputs: {\r\n            title_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            companyName_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Company name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            position_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'What is your position in this company?'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            },\r\n            from_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'from...ex(2016, 2018...etc)'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength:4,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            to_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'to...ex(2016, 2018...etc)'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength:4,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            description_0 : {\r\n                elementType: 'textarea',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Description...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            }\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.resumeRedirect !== '/chooseTask') {\r\n            this.props.onSetResumeRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs:updateInputs, formIsValid:formIsValid})\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"title_\" + i] : {\r\n                ...this.state.inputs[\"title_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"companyName_\" + i] : {\r\n                ...this.state.inputs[\"companyName_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"position_\" + i] : {\r\n                ...this.state.inputs[\"position_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"from_\" + i] : {\r\n                ...this.state.inputs[\"from_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"to_\" + i] : {\r\n                ...this.state.inputs[\"to_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"description_\" + i] : {\r\n                ...this.state.inputs[\"description_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            }\r\n        });\r\n        this.setState({inputs:addInput, i: incI.i, formIsValid: false})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const data = {};\r\n        for (let key in this.state.inputs) {\r\n            data[key] = this.state.inputs[key].value\r\n        }\r\n        const resumeData = {\r\n            info: {\r\n                ...data\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitResume(this.props.token, resumeData);\r\n    }\r\n\r\n    render () {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.configer.elementType}\r\n                value = {formElement.configer.value}\r\n                touched = {formElement.configer.touched}\r\n                isValid = {!formElement.configer.valid}\r\n                shouldValidate = {formElement.configer.validation}\r\n                classes = {formElement.configer.classes}\r\n                elementConfig = {formElement.configer.config}\r\n                changed = {(event) =>this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId !== null) {\r\n            redirect = <Redirect to = {this.props.resumeRedirect} />\r\n        }\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"resume-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start adding your career history</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add More information?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.resume.loading,\r\n        requestId: state.resume.requestId,\r\n        resumeRedirect: state.resume.setResumeRedirect,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        error: state.resume.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitResume: (token, data) => dispatch(actions.submitResume(token, data)),\r\n        onSetResumeRedirect: () => dispatch(actions.setResumeRedirect('/chooseTask'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResumeData);","import React, { Component } from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport '../formsData.scss';\r\n\r\nlibrary.add(faPlus);\r\n\r\nclass PortfolioData extends Component {\r\n    state = {\r\n        inputs: {\r\n            thumbnail_0: {\r\n                elementType: 'inputFile',\r\n                config: {\r\n                    type: 'file'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                classes: 'col-lg-12',\r\n                uploadImage: ''\r\n            },\r\n            title_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            link_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Put the link to this item'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            }\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.portRedirect !== '/chooseTask') {\r\n            this.props.onSetPortRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName]: updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                touched: true,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation)\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid:formIsValid});\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"thumbnail_\" + i]: {\r\n                ...this.state.inputs[\"thumbnail_0\"],\r\n                value: '',\r\n                valid: true,\r\n                touched: false,\r\n                uploadImage: ''\r\n            },\r\n            [\"title_\" + i]: {\r\n                ...this.state.inputs[\"title_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            [\"link_\" + i]: {\r\n                ...this.state.inputs[\"link_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        });\r\n        this.setState({inputs:addInput, i: incI.i, formIsValid:false})\r\n    }\r\n\r\n    addThumbnailImage = (event, inputName) => {\r\n        event.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        // console.log(event.target.value);\r\n        reader.onloadend = () => {\r\n            const updateImage = updateObject(this.state.inputs, {\r\n                [inputName]: updateObject(this.state.inputs[inputName], {\r\n                    uploadImage: reader.result,\r\n                    touched:true,\r\n                    valid:true\r\n                })\r\n            });\r\n            \r\n            this.setState({inputs:updateImage})\r\n        };\r\n        if ( event.target.files[0] ) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const data = {};\r\n        for (let key in this.state.inputs) {\r\n            data[key] = this.state.inputs[key].uploadImage;\r\n            if (this.state.inputs[key].uploadImage == null) {\r\n                data[key] = this.state.inputs[key].value;\r\n            }\r\n        }\r\n        const portData = {\r\n            info: {\r\n                ...data\r\n            },\r\n            userId: this.props.userId\r\n        };\r\n        this.props.onSubmitPort(this.props.token, portData);\r\n    }\r\n\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementArray.map(formElemnt => (\r\n            <Input \r\n                key = {formElemnt.id}\r\n                value = {formElemnt.configer.value}\r\n                elementType = {formElemnt.configer.elementType}\r\n                isValid = {!formElemnt.configer.valid}\r\n                touched = {formElemnt.configer.touched}\r\n                classes = {formElemnt.configer.classes}\r\n                shouldValidate = {formElemnt.configer.validation}\r\n                elementConfig = {formElemnt.configer.config}\r\n                changed = {(event) => this.inputChangeHandler(event, formElemnt.id)}\r\n                file = {(event) => this.addThumbnailImage(event, formElemnt.id)}\r\n                src = {formElemnt.configer.uploadImage}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId) {\r\n            redirect = <Redirect to = {this.props.portRedirect} />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"port-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start adding your works</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add More works?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.port.loading,\r\n        requestId: state.port.requestId !== null,\r\n        portRedirect: state.port.setPortfolioRedirect,\r\n        userId: state.auth.userId,\r\n        token: state.auth.token,\r\n        error: state.port.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitPort: (token, data) => dispatch(actions.submitPortfolio(token, data)),\r\n        onSetPortRedirect: () => dispatch(actions.setPortfolioRedirect('/chooseTask'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortfolioData);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './navigationItem.scss';\r\n\r\nconst navigationItem = ( props ) => (\r\n    <li className = \"navItem\">\r\n        <NavLink to = {props.link} exact = {props.exact} activeClassName = \"active\">{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from '../navigationItem/navigationItem';\r\nimport './navigationItems.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserAlt, faBriefcase, faGripHorizontal, faSignOutAlt, faCogs } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faUserAlt, faBriefcase, faGripHorizontal, faSignOutAlt, faCogs);\r\n\r\nconst navigationItems = ( props ) => {\r\n    let classes = \"closed\";\r\n    if (props.show) {\r\n        classes = \"opened\"\r\n    }\r\n    return (<nav className = {classes}>\r\n                <ul className=\"list-unstyled\">\r\n                    <NavigationItem link = \"/home\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faUserAlt}/>\r\n                        <span>My Profile</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/portfolio\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faBriefcase} />\r\n                        <span>My Portfolio</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/resume\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faGripHorizontal} />\r\n                        <span>My Resume</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/logout\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faSignOutAlt} />\r\n                        <span>Log out</span>\r\n                    </NavigationItem>\r\n                </ul>\r\n                <span className=\"option\" onClick = {props.clicked}>\r\n                    <FontAwesomeIcon icon = {faCogs} />\r\n                </span>\r\n        </nav>);\r\n};\r\n\r\nexport default navigationItems;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../AuxC';\r\nimport NavigationItems from '../../components/navigation/navigationItems/navigationItems';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showNav: false\r\n    }\r\n\r\n\r\n    navToggleHandler = () => {\r\n        this.setState(prevState => {\r\n            return {showNav: !prevState.showNav}\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                {this.props.reachHome? <NavigationItems show = {this.state.showNav} clicked = {this.navToggleHandler}/>: null}\r\n                {this.props.children}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reachHome: state.auth.reachHome\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport './skill.scss';\r\n\r\nconst skill = ( props ) => (\r\n    <div className=\"skill\">\r\n        <div className=\"rate\" style={{\r\n            width: props.rate\r\n        }}>\r\n            <p>{props.skill}</p>\r\n            <span>{props.rate}</span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default skill;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n// import Button from '../UI/Button/Button';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport Skill from './skill/skill';\r\n\r\nclass Skills extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let skills = null;\r\n        \r\n        if (this.props.loading) {\r\n            skills = <Spinner />;\r\n        }\r\n       \r\n        if (this.props.skillsData !== null && !this.props.loading) {\r\n            skills = this.props.skillsData.map(skillElement => (\r\n                <Skill key = {skillElement.id} skill = {skillElement.skill} rate = {skillElement.rate + \"%\"}/>\r\n            ))\r\n        }\r\n\r\n        if (this.props.skillsData !== null && !this.props.loading && this.props.skillsData.length < 1) {\r\n            skills = (\r\n                    <NavLink to = \"/skillsData\" className = \"direction\">\r\n                        Add your Skills\r\n                    </NavLink>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <div className=\"skills\">\r\n                <h3>Skills</h3>\r\n                {skills}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.skills.loading,\r\n        skillsData: state.skills.skillsData,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchSkills(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Skills);","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/AuxC'\r\nimport { Col } from 'reactstrap';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faAt, faPhoneVolume } from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n// import Button from '../UI/Button/Button';\r\nlibrary.add(faCalendarAlt, faAt, faPhoneVolume);\r\n\r\nclass About extends Component {\r\n    componentDidMount () {\r\n        if (this.props.token !== null && this.props.userId !== null) {\r\n            this.props.onFetch(this.props.token, this.props.userId);\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        let userData = null;\r\n\r\n        if (this.props.loading) {\r\n            userData = <Spinner />\r\n        }\r\n\r\n        if (this.props.data !== null && !this.props.loading) {\r\n            userData = (\r\n                <Aux>\r\n                    <Col xl = '4' lg = '6'>\r\n                    <div className=\"profile\">\r\n                        <img src = {this.props.data.profile} alt=\"Profile: usually contains a person\" className=\"d-block mx-auto img-fluid\"/>\r\n                    </div>\r\n                    </Col>\r\n                    <Col xl = '8' lg = '6'>\r\n                        <h2>Hello, I'm {this.props.data.fname} {this.props.data.lname}</h2>\r\n                        <p className=\"title\">I'm a {this.props.data.jobTitle}</p>\r\n                        <p className=\"desc\">{this.props.data.bio}</p>\r\n                        <ul className=\"list-unstyled info\">\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faCalendarAlt} /></span>\r\n                                <p><span>Date of birth:</span> {this.props.data.birth}</p>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faAt} /></span>\r\n                                <p><span>Email:</span> {this.props.data.email}</p>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faPhoneVolume} /></span>\r\n                                <p><span>Phone:</span> {this.props.data.phone}</p>\r\n                            </li>\r\n                        </ul>\r\n                        {/* <Button>Edit your personal information</Button>\r\n                        <NavLink to = \"/data\">Edit your personal information</NavLink> */}\r\n                    </Col>\r\n                </Aux>\r\n            );\r\n        }\r\n\r\n        const isEmpty = (object) => {\r\n            for (let key in object) {\r\n                if (object.hasOwnProperty(key)) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isEmpty(this.props.data) && !this.props.loading) {\r\n            userData = (\r\n                <NavLink to = \"/data\" className = \"direction\">\r\n                    Add your personal information\r\n                </NavLink>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {userData}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        data: state.user.data,\r\n        loading: state.user.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchUser(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport './Home.scss';\r\nimport Skills from '../../components/skills/skills';\r\nimport About from '../../components/about/about';\r\n\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.onNav();\r\n        this.props.onAuthRedirect('/home');\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <section className=\"home\">\r\n                <Row>\r\n                    <About />\r\n                    <Col lg='12'>\r\n                        <Skills />\r\n                    </Col>\r\n                </Row>  \r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchSkills(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome()),\r\n        onAuthRedirect: (path) => dispatch(actions.setAuthRedirect(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\r\nimport Aux from '../../hoc/AuxC';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faCalendarAlt, faPenAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport './resumeComponent.scss';\r\n\r\nlibrary.add(faStar, faCalendarAlt, faPenAlt);\r\n\r\nconst resumeComponent = ( props ) => (\r\n    <Aux>\r\n        <div className = \"resume-box col-xl-6 col-lg-12\">\r\n            <div className = \"title\"><h3>{props.title} at {props.company}</h3></div>\r\n                <div className = \"resume-content\">\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faStar} />\r\n                            </span>\r\n                                \r\n                            <p>\r\n                                <span className = \"info-title\">Position: </span>\r\n                                {props.position}\r\n                            </p>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faCalendarAlt} />\r\n                            </span>\r\n                            <p><span className = \"info-title\">from</span> <span className=\"date\">{props.from}</span> <span className = \"info-title\">to</span> <span className=\"date\">{props.to}</span></p>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faPenAlt} />\r\n                            </span>\r\n                            <p>{props.description}</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {/*resume-content*/}\r\n        </div>\r\n        {/* resume-box */}\r\n    </Aux>\r\n);\r\n\r\nexport default resumeComponent;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { Row } from 'reactstrap';\r\nimport ResumeComponent from '../../components/resume/resumeComponent';\r\nimport './resume.scss';\r\n\r\nclass Resume extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onNav();\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let resumes = null;\r\n\r\n        if (this.props.loading) {\r\n            resumes = <Spinner />\r\n        }\r\n\r\n        if (this.props.resumeData !== null && !this.props.loading) {\r\n            resumes = this.props.resumeData.map(resumeElements => (\r\n                <ResumeComponent\r\n                    key = {resumeElements.id}\r\n                    title = {resumeElements.title}\r\n                    company = {resumeElements.company}\r\n                    position = {resumeElements.position}\r\n                    from = {resumeElements.from}\r\n                    to = {resumeElements.to}\r\n                    description = {resumeElements.description}\r\n                 />\r\n            ));\r\n        }\r\n\r\n        if (this.props.resumeData !== null && !this.props.loading && this.props.resumeData.length < 1) {\r\n            resumes = (\r\n                <NavLink to = \"/resumeData\" className = \"direction\">\r\n                    Add your career history\r\n                </NavLink>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className = \"resume\">\r\n                <h2 className = \"text-center\">My career history</h2>\r\n                <div className = \"cont\">\r\n                    <Row>\r\n                        {resumes}\r\n                    </Row>\r\n                </div>\r\n                \r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.resume.loading,\r\n        resumeData: state.resume.resumeData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchResume(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps ,mapDispatchToProps)(Resume);","import React from 'react';\r\nimport Aux from '../../hoc/AuxC';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './portfolioComponent.scss';\r\n\r\nconst portfolio = ( props ) => (\r\n    <Aux>\r\n        <div className = \"col-xl-4 col-lg-6\">\r\n            <div className = \"port-container\">\r\n                <img src = {props.img} className = \"img-fluid d-block mx-auto\" alt = \"Portfolio: may contains special works\"/>\r\n                <div className = \"overlay title\">\r\n                    <h3>{props.title}</h3>\r\n                </div>\r\n                <div className = \"overlay link\">\r\n                    <Link target=\"_blank\" to = {{\r\n                        pathname: props.link\r\n                    }}>view</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\nexport default portfolio;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PortfolioComponent from '../../components/portfolio/portfolioComponent';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport { Row } from 'reactstrap';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport './portfolio.scss';\r\n\r\nclass Portfolio extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onNav();\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let Ports = null;\r\n\r\n        if (this.props.loading) {\r\n            Ports = <Spinner />\r\n        }\r\n        if (this.props.portfolioData !== null && !this.props.loading) {\r\n            Ports = this.props.portfolioData.map(portElement => (\r\n                <PortfolioComponent \r\n                    key = {portElement.id}\r\n                    title = {portElement.title}\r\n                    img = {portElement.thumbnail}\r\n                    link = {portElement.link}\r\n                />\r\n            ))\r\n        }\r\n\r\n        if (this.props.portfolioData !== null && !this.props.loading && this.props.portfolioData.length < 1) {\r\n            Ports = (\r\n                <NavLink to = \"/portfolioData\" className = \"direction\">\r\n                    Add your works\r\n                </NavLink>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className = \"portfolio\">\r\n                <h2 className = \"text-center\">My Works</h2>\r\n                <div className = \"cont\">\r\n                    <Row>\r\n                        {Ports}\r\n                    </Row>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.port.loading,\r\n        portfolioData: state.port.portfolioData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchPortfolio(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Portfolio);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.outApp();\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to = \"/\" />\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout()),\r\n        outApp: () => dispatch(actions.outApp())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport NavigationItem from '../../components/navigation/navigationItem/navigationItem';\r\nimport chooseTaskImage from '../../assets/choose-task.jpeg';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport \"./ChooseTask.scss\";\r\n\r\nclass ChooseTask extends Component {\r\n    render () {\r\n\r\n        let redirect = null;\r\n        if (this.props.userRequestId && this.props.skillsRequestId && this.props.resumeRequestId && this.props.portRequestId) {\r\n            redirect = <Redirect to = '/home' />\r\n        }\r\n\r\n        if (this.props.reachHome) {\r\n            redirect = <Redirect to = '/home' />\r\n        }\r\n\r\n        return  (\r\n        <section className=\"chooseTask\">\r\n            {redirect}\r\n            <div className=\"container\">\r\n                <div className=\"justify-content-center align-items-center row\">\r\n                    <div className=\"col-lg-9 \">\r\n                        <div className=\"content row\">\r\n                            <div className=\"col-lg-6 sp\">\r\n                                <div className=\"pic\">\r\n                                    <div className=\"pic\">\r\n                                        <img src = {chooseTaskImage} className=\"img-fluid d-block mx-auto\" alt=\"contains peaple looking at a computer\"/>\r\n                                        <div className=\"blur\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 sp\">\r\n                                <nav className=\"chooseTaskNav\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {this.props.userRequestId? null: <NavigationItem link = \"/data\" exact = {true}>Start adding your personal data</NavigationItem>}\r\n                                        {this.props.skillsRequestId? null: <NavigationItem link = \"/skillsData\" exact = {true}>Start adding your Skills</NavigationItem>}\r\n                                        {this.props.resumeRequestId? null: <NavigationItem link = \"/resumeData\" exact = {true}>Start adding your career history</NavigationItem>}\r\n                                        {this.props.portRequestId? null: <NavigationItem link = \"/portfolioData\" exact = {true}>Start adding your works</NavigationItem>}\r\n                                        <NavigationItem link = \"/home\" exact = {true}>\r\n                                            <Button classes=\"tasksButton\">Skip tasks to your profile</Button>\r\n                                        </NavigationItem>\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div> {/*content*/ }\r\n                    </div> {/*col-lg-9*/ }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        portRequestId: state.port.requestId !== null,\r\n        resumeRequestId: state.resume.requestId !== null,\r\n        skillsRequestId: state.skills.requestId !== null,\r\n        userRequestId: state.user.requestId !== null,\r\n        reachHome: state.auth.reachHome\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChooseTask);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Auth from './containers/auth/auth';\nimport UserData from './containers/getDataForms/UserData/UserData';\nimport SkillsData from './containers/getDataForms/SkillsData/SkillsData';\nimport ResumeData from './containers/getDataForms/ResumeData/ResumeData';\nimport PortfolioData from './containers/getDataForms/PortfolioData/PortfolioData';\nimport Layout from './hoc/Layout/Layout';\nimport Home from './containers/Home/Home';\nimport Resume from './containers/resume/resume';\nimport Portfolio from './containers/portfolios/portfolio';\nimport Logout from './containers/auth/Logout/Logout';\nimport ChooseTask from './containers/ChooseTask/ChooseTask';\nimport * as actions from './store/actions/indexActions';\nimport './App.scss';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onAutoLogin();\n    this.props.onCheckPortfolioRequestId();\n    this.props.onCheckResumeRequestId();\n    this.props.onCheckSkillsRequestId();\n    this.props.onCheckUserRequestId();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path = '/' exact component = {Auth}/>\n        <Route path = '/logout' exact component = {Logout}/>\n      </Switch>\n    );\n\n    if (this.props.token) {\n      routes = (\n        <Switch>\n          <Route path = '/chooseTask' exact component = {ChooseTask}/>\n          <Route path = '/data' component = {UserData}/>\n          <Route path = '/skillsData' component = {SkillsData}/>\n          <Route path = '/resumeData' component = {ResumeData}/>\n          <Route path = '/portfolioData' component = {PortfolioData}/>\n          <Route path = '/home' component = {Home}/>\n          <Route path = '/resume' exact component = {Resume}/>\n          <Route path = '/portfolio' exact component = {Portfolio}/>\n          <Route path = '/logout' exact component = {Logout}/>\n          <Redirect to= {this.props.redirect} />\n        </Switch>\n      );\n    }\n\n    let style = [];\n\n    if (this.props.reachHome) {\n        style.push(\"fromHome\");\n    }\n\n    return (\n      <div className = {style.join(\"\")}>\n        <Layout>\n            {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token !== null,\n    redirect: state.auth.authRedirectPath,\n    reachHome: state.auth.reachHome\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoLogin: () => dispatch(actions.authCheckState()),\n    onCheckPortfolioRequestId: () => dispatch(actions.checkPortfolioRequestIdState()),\n    onCheckResumeRequestId: () => dispatch(actions.checkResumeRequestIdState()),\n    onCheckSkillsRequestId: () => dispatch(actions.checkSkillsRequestIdState()),\n    onCheckUserRequestId: () => dispatch(actions.checkUserRequestIdState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/home',\r\n    reachHome: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading:false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n}\r\n\r\nconst setAuthRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath: action.path\r\n    });\r\n}\r\n\r\nconst reachHome = (state, action) => {\r\n    return updateObject(state, {\r\n        reachHome: true\r\n    });\r\n}\r\n\r\nconst outApp = (state, action) => {\r\n    return updateObject(state, {\r\n        reachHome: false\r\n    })\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT: return setAuthRedirect(state, action);\r\n        case actionTypes.REACH_HOME: return reachHome(state, action);\r\n        case actionTypes.OUT_APP: return outApp(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    userRedirectPath: '/chooseTask',\r\n    data: null,\r\n    requestId: null\r\n}\r\n\r\nconst submitDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    })\r\n}\r\n\r\nconst submitDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null,\r\n        requestId: action.requestId\r\n    });\r\n}\r\n\r\nconst submitDataFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst setUserRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        userRedirectPath: action.path\r\n    });\r\n}\r\n\r\nconst fetchDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        data: action.userData,\r\n        loading:false,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchDataFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst fetchUserRequestIdSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_DATA_START: return submitDataStart(state, action);\r\n        case actionTypes.SUBMIT_DATA_SUCCESS: return submitDataSuccess(state, action);\r\n        case actionTypes.SUBMIT_DATA_FAIL: return submitDataFail(state, action);\r\n        case actionTypes.SET_USER_REDIRECT: return setUserRedirectPath(state, action);\r\n        case actionTypes.FETCH_USER_START: return fetchDataStart(state, action);\r\n        case actionTypes.FETCH_USER_SUCCESS: return fetchDataSuccess(state, action);\r\n        case actionTypes.FETCH_USER_FAIL: return fetchDataFail(state, action);\r\n        case actionTypes.FETCH_USER_REQUEST_ID_SUCCESS: return fetchUserRequestIdSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading:false,\r\n    error: null,\r\n    skillsData: null,\r\n    requestId: null,\r\n    setSkillsRedirect: '/chooseTask'\r\n}\r\n\r\nconst skillsSubmitStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst skillsSubmitFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst skillsSubmitSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null,\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst setSkillsRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        setSkillsRedirect: action.path\r\n    })\r\n}\r\n\r\nconst fetchSkillsStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchSkillsSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        skillsData: action.skills\r\n    })\r\n}\r\n\r\nconst fetchSkillsFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst fetchSkillsRequestIdFromLocalSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_SKILLS_START: return skillsSubmitStart(state, action);\r\n        case actionTypes.SUBMIT_SKILLS_SUCCESS: return skillsSubmitSuccess(state, action);\r\n        case actionTypes.SUBMIT_SKILLS_FAIL: return skillsSubmitFail(state, action);\r\n        case actionTypes.SET_SKILLS_REDIRECT: return setSkillsRedirect(state, action);\r\n        case actionTypes.FETCH_SKILLS_START: return fetchSkillsStart(state, action);\r\n        case actionTypes.FETCH_SKILLS_SUCCESS: return fetchSkillsSuccess(state, action);\r\n        case actionTypes.FETCH_SKILLS_FAIL: return fetchSkillsFail(state, action);\r\n        case actionTypes.FETCH_SKILLS_REQUEST_ID_FROM_LOCAL_SUCCESS: return fetchSkillsRequestIdFromLocalSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading:false,\r\n    error: null,\r\n    portfolioData: null,\r\n    setPortfolioRedirect: '/chooseTask',\r\n    requestId: null\r\n}\r\n\r\nconst submitPortfolioStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst submitPortfolioSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        requestId: action.requestId\r\n    });\r\n};\r\n\r\nconst submitPortfolioFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst setPortfolioRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        setPortfolioRedirect: action.path\r\n    });\r\n}\r\n\r\nconst fetchPortfolioStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchPortfolioSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        portfolioData: action.portfolioData\r\n    });\r\n}\r\n\r\nconst fetchPortfolioFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst fetchRequestIdFromLocalSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case actionTypes.SUBMIT_PORTFOLIO_START: return submitPortfolioStart(state, action);\r\n        case actionTypes.SUBMIT_PORTFOLIO_SUCCESS: return submitPortfolioSuccess(state, action);\r\n        case actionTypes.SUBMIT_PORTFOLIO_FAIL: return submitPortfolioFail(state, action);\r\n        case actionTypes.SET_PORTFOLIO_REDIRECT: return setPortfolioRedirect(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_START: return fetchPortfolioStart(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_SUCCESS: return fetchPortfolioSuccess(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_FAIL: return fetchPortfolioFail(state, action);\r\n        case actionTypes.FETCH_PORT_REQUESTID_FROM_LOCAL_SUCCESS: return fetchRequestIdFromLocalSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    requestId: null,\r\n    setResumeRedirect: '/chooseTask',\r\n    resumeData: null\r\n}\r\n\r\nconst submitResumeStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst submitResumeSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        requestId: action.requestId\r\n    });\r\n};\r\n\r\nconst submitResumeFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst setResumeRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        path: action.path\r\n    });\r\n}\r\n\r\nconst fetchResumeStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchResumeSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        resumeData: action.resumeData\r\n    });\r\n}\r\n\r\nconst fetchResumeFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst fetchRequestIdFromLocalSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        requestId: action.requestId\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_RESUME_START: return submitResumeStart(state, action);\r\n        case actionTypes.SUBMIT_RESUME_SUCCESS: return submitResumeSuccess(state, action);\r\n        case actionTypes.SUBMIT_RESUME_FAIL: return submitResumeFail(state, action);\r\n        case actionTypes.SET_RESUME_REDIRECT: return setResumeRedirect(state, action);\r\n        case actionTypes.FETCH_RESUME_START: return fetchResumeStart(state, action);\r\n        case actionTypes.FETCH_RESUME_SUCCESS: return fetchResumeSuccess(state, action);\r\n        case actionTypes.FETCH_RESUME_FAIL: return fetchResumeFail(state, action);\r\n        case actionTypes.FETCH_RESUME_REQUEST_ID_FROM_LOCAL_SUCCESS: return fetchRequestIdFromLocalSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { put, call, delay } from 'redux-saga/effects';\r\n\r\nimport axios from 'axios'\r\n\r\nimport * as actions from '../actions/indexActions';\r\n\r\nexport function* authSaga (action) {\r\n    yield put(actions.authStart());\r\n    const authData = {\r\n        email: action.email,\r\n        password: action.password,\r\n        returnSecureToken: true\r\n    }\r\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyC8jZLrHIwbWvm6VIX9z_lB19X5GW6C7Jw';\r\n    if (!action.isLogin) {\r\n        url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyC8jZLrHIwbWvm6VIX9z_lB19X5GW6C7Jw';\r\n    }\r\n    try {\r\n        const response = yield axios.post(url, authData);\r\n        const expirationDate = yield new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n        yield localStorage.setItem('token', response.data.idToken);\r\n        yield localStorage.setItem('expirationTime', expirationDate);\r\n        yield localStorage.setItem('userId', response.data.localId);\r\n        yield put(actions.authSuccess(response.data.idToken, response.data.localId));\r\n        yield put(actions.authCheckTimeOut(response.data.expiresIn));\r\n\r\n    } catch (err) {\r\n        yield put(actions.authFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* authLogout (action) {\r\n    yield call([localStorage, 'removeItem'], 'token');\r\n    yield call([localStorage, 'removeItem'], 'expirationTime');\r\n    yield call([localStorage, 'removeItem'], 'userId');\r\n    yield call([localStorage, 'removeItem'], 'resumeRequestId');\r\n    yield call([localStorage, 'removeItem'], 'skillsRequestId');\r\n    yield call([localStorage, 'removeItem'], 'portRequestId');\r\n    yield call([localStorage, 'removeItem'], 'userRequestId');\r\n    yield put(actions.logoutSucceed());\r\n}\r\n\r\nexport function* authCheckTimeOut (action) {\r\n    yield delay(action.expirationTime * 1000);\r\n    yield put(actions.logout());\r\n}\r\n\r\nexport function* authCheckState (action) {\r\n    const token = yield localStorage.getItem('token');\r\n    if (!token) {\r\n        yield put(actions.logout());\r\n    } else {\r\n        const expirationDate = new Date(localStorage.getItem('expirationTime'));\r\n        if (expirationDate < new Date()) {\r\n            yield put(actions.logout());\r\n        } else {\r\n            const userId = yield localStorage.getItem('userId');\r\n            yield put(actions.authSuccess(token, userId));\r\n            yield put(actions.authCheckTimeOut((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n        }\r\n    }\r\n} ","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://personal-app-54349.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import { put } from 'redux-saga/effects';\r\nimport axios from '../../axios-order';\r\nimport * as actions from '../actions/indexActions';\r\n\r\nexport function* submitData (action) {\r\n    yield put(actions.submitDataStart());\r\n    const personalData = action.data;\r\n    try {\r\n        const response = yield axios.post('/personal.json?auth=' + action.token, personalData);\r\n        yield put(actions.submitDataSuccess(response.data.name));\r\n        yield localStorage.setItem('userRequestId', response.data.name);\r\n    } catch (err) {\r\n        yield put(actions.submitDataFail(err.response.data.error))\r\n    }\r\n}\r\n\r\nexport function* fetchUserSaga (action) {\r\n    yield put(actions.fetchUserStart());\r\n    const queryParms = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/personal.json' + queryParms);\r\n        let userData= {};\r\n        for (let key in response.data) {\r\n            userData= {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n        yield put(actions.fetchUserSuccess(userData));\r\n    } catch (err) {\r\n        yield put(actions.fetchUserFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* checkUserRequestIdState(action) {\r\n    const requestId = yield localStorage.getItem('userRequestId');\r\n    if(requestId !== null) {\r\n        yield put(actions.fetchUserRequestIdSuccess(requestId));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitSkillsSaga (action) {\r\n    yield put(actions.submitSkillsStart());\r\n    const skillsData = action.skillsData;\r\n    try {\r\n        const response = yield axios.post('/skills.json?auth=' + action.token, skillsData);\r\n        yield put(actions.submitSkillsSuccess(response.data.name));\r\n        yield localStorage.setItem(\"skillsRequestId\", response.data.name);\r\n    } catch (error) {\r\n        yield put(actions.submitSkillsFail(error.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchSkillsSaga (action) {\r\n    yield put(actions.fetchSkillsStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/skills.json' + queryParams);\r\n        let fetchSkills = {};\r\n        for (let key in response.data) {\r\n            fetchSkills = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n\r\n        let skillsArray = [];\r\n        for (let key in fetchSkills) {\r\n            skillsArray.push({\r\n                [key]: fetchSkills[key]\r\n            })\r\n        }\r\n\r\n        let skillsArrayArrenge = [];\r\n        for (let i = 0; i <= (skillsArray.length - 1) / 2; i++) {\r\n            skillsArrayArrenge.push({\r\n                \"skill\": fetchSkills[\"skill_\" + i],\r\n                \"rate\": fetchSkills[\"rate_\" + i],\r\n                id: \"skill_\" + i\r\n            })\r\n        }\r\n        yield put(actions.fetchSkillsSuccess(skillsArrayArrenge));\r\n    } catch (err) {\r\n        yield put (actions.fetchSkillsFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* checkSkillsRequestIdState(action) {\r\n    const requestId = localStorage.getItem('skillsRequestId');\r\n    if (requestId !== null) {\r\n        yield put (actions.fetchSkillsRequestIdFromLocalSuccess(requestId));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitPortfolio (action) {\r\n    yield put(actions.submitPortfolioStart());\r\n    const portfolioData = action.portfolioData;\r\n    try {\r\n        const response = yield axios.post('/portfolio.json?auth=' +  action.token, portfolioData);\r\n        yield put(actions.submitPortfolioSuccess(response.data.name));\r\n        yield localStorage.setItem('portRequestId', response.data.name);\r\n    } catch (err) {\r\n        yield put(actions.submitPortfolioFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchPortfolio (action) {\r\n    yield put(actions.fetchPortfolioStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/portfolio.json' + queryParams);\r\n        let fetchPorts = {};\r\n        for (let key in response.data) {\r\n            fetchPorts = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n        let portsArray = [];\r\n        for(let key in fetchPorts) {\r\n            portsArray.push({\r\n                [key]: fetchPorts[key]\r\n            })\r\n        }\r\n\r\n        let portsArrayArrange = [];\r\n        for (let i = 0; i <=  (portsArray.length - 1) / 3; i++) {\r\n            portsArrayArrange.push({\r\n                \"link\": fetchPorts[\"link_\" + i],\r\n                \"thumbnail\" : fetchPorts[\"thumbnail_\" + i],\r\n                \"title\": fetchPorts[\"title_\" + i],\r\n                id: i\r\n            });\r\n        }\r\n        yield put(actions.fetchPortfolioSuccess(portsArrayArrange));\r\n    } catch(err) {\r\n        yield put(actions.fetchPortfolioFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* checkPortfolioRequestIdState(action) {\r\n    const requestId = yield localStorage.getItem(\"portRequestId\");\r\n    if (requestId) {\r\n        yield put(actions.fetchRequestIdFromLocalSuccess(requestId));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitResume (action) {\r\n    yield put(actions.submitResumeStart());\r\n    const resumeData = action.resumeData;\r\n    try {\r\n        const response = yield axios.post('/resume.json?auth=' + action.token, resumeData);\r\n        yield put(actions.submitResumeSuccess(response.data.name));\r\n        yield localStorage.setItem('resumeRequestId', response.data.name);\r\n    } catch (err) {\r\n        yield put (actions.submitResumeFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchResume (action) {\r\n    yield put(actions.fetchResumeStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/resume.json' + queryParams);\r\n        let fetchResume = {};\r\n        for (let key in response.data) {\r\n            fetchResume = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n\r\n        let resumeArray = [];\r\n        for (let key in fetchResume) {\r\n            resumeArray.push({\r\n                [key]: fetchResume[key]\r\n            });\r\n        }\r\n\r\n        let resumeArrayArrange = [];\r\n        for (let i = 0; i <= (resumeArray.length - 1) / 6; i++) {\r\n            resumeArrayArrange.push({\r\n                \"title\": fetchResume[\"title_\" + i],\r\n                \"company\": fetchResume[\"companyName_\" + i],\r\n                \"position\": fetchResume[\"position_\" + i],\r\n                \"from\": fetchResume[\"from_\" + i],\r\n                \"to\": fetchResume[\"to_\" + i],\r\n                \"description\": fetchResume[\"description_\" + i],\r\n                id: i\r\n            });\r\n        }\r\n        yield put(actions.fetchResumeSuccess(resumeArrayArrange));\r\n    } catch (err) {\r\n        yield put(actions.fetchResumeFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* checkResumeRequestIdState(action) {\r\n    const requestId = yield localStorage.getItem('resumeRequestId');\r\n    if (requestId) {\r\n        yield put(actions.fetchResumeRequestIdFromLocalSuccess(requestId))\r\n    }\r\n}","import { takeEvery, all } from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport { authSaga, authLogout, authCheckTimeOut, authCheckState } from './authSaga';\r\nimport { submitData, fetchUserSaga, checkUserRequestIdState } from './userSaga';\r\nimport { submitSkillsSaga, fetchSkillsSaga, checkSkillsRequestIdState } from './skillsSaga';\r\nimport { submitPortfolio, fetchPortfolio, checkPortfolioRequestIdState } from './portfolioSaga';\r\nimport { submitResume, fetchResume, checkResumeRequestIdState } from './resumeSaga';\r\n\r\nexport function* watchAuth () {\r\n    yield all([\r\n        takeEvery(actionTypes.AUTH_USER, authSaga),\r\n        takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, authLogout),\r\n        takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, authCheckTimeOut),\r\n        takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckState),\r\n    ]);\r\n}\r\n\r\nexport function* watchPersonalData () {\r\n    yield takeEvery(actionTypes.SUBMIT_DATA, submitData);\r\n    yield takeEvery(actionTypes.FETCH_USER, fetchUserSaga);\r\n    yield takeEvery(actionTypes.CHECK_USER_REQUESR_ID_STATE, checkUserRequestIdState);\r\n}\r\n\r\nexport function* watchSkillsData () {\r\n    yield takeEvery(actionTypes.SUBMIT_SKILLS, submitSkillsSaga);\r\n    yield takeEvery(actionTypes.FETCH_SKILLS, fetchSkillsSaga);\r\n    yield takeEvery(actionTypes.CHECK_SKILLS_REQUEST_ID_STATE, checkSkillsRequestIdState);\r\n}\r\n\r\nexport function* watchPortfolioData () {\r\n    yield takeEvery(actionTypes.SUBMIT_PORTFOLIO, submitPortfolio);\r\n    yield takeEvery(actionTypes.FETCH_PORTFOLIO, fetchPortfolio);\r\n    yield takeEvery(actionTypes.CHECK_PORTFOLIO_REQUESTID_STATE, checkPortfolioRequestIdState);\r\n}\r\n\r\nexport function* watchResumeData () {\r\n    yield takeEvery(actionTypes.SUBMIT_RESUME, submitResume);\r\n    yield takeEvery(actionTypes.FETCH_RESUME, fetchResume);\r\n    yield takeEvery(actionTypes.CHECK_RESUME_REQUEST_ID_STATE, checkResumeRequestIdState);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport authReducer from './store/reducers/authReducer';\nimport userReducer from './store/reducers/userReducer';\nimport skillsReducer from './store/reducers/skillsReducer';\nimport portfolioReducer from './store/reducers/portfolioReducer';\nimport resumeReducer from './store/reducers/resumeReducer';\nimport { watchAuth, watchPersonalData, watchSkillsData, watchPortfolioData, watchResumeData } from './store/sagas/indexSaga';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    skills: skillsReducer,\n    port: portfolioReducer,\n    resume: resumeReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n));\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchPersonalData);\nsagaMiddleware.run(watchSkillsData);\nsagaMiddleware.run(watchPortfolioData);\nsagaMiddleware.run(watchResumeData);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/choose-task.7652002d.jpeg\";"],"sourceRoot":""}