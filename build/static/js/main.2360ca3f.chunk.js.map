{"version":3,"sources":["hoc/AuxC.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","shared/Utility.js","store/actions/actionTypes.js","store/actions/authAction.js","store/actions/userAction.js","store/actions/skillsAction.js","store/actions/portfolioAction.js","store/actions/resumeActions.js","containers/auth/auth.js","components/UI/spanButton/spanButton.js","containers/getDataForms/UserData/UserData.js","containers/getDataForms/SkillsData/SkillsData.js","containers/getDataForms/ResumeData/ResumeData.js","containers/getDataForms/PortfolioData/PortfolioData.js","components/navigation/navigationItem/navigationItem.js","components/navigation/navigationItems/navigationItems.js","hoc/Layout/Layout.js","components/skills/skill/skill.js","components/skills/skills.js","components/about/about.js","containers/Home/Home.js","components/resume/resumeComponent.js","containers/resume/resume.js","components/portfolio/portfolioComponent.js","containers/portfolios/portfolio.js","containers/auth/Logout/Logout.js","containers/ChooseTask/ChooseTask.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/userReducer.js","store/reducers/skillsReducer.js","store/reducers/portfolioReducer.js","store/reducers/resumeReducer.js","store/sagas/authSaga.js","axios-order.js","store/sagas/userSaga.js","store/sagas/skillsSaga.js","store/sagas/portfolioSaga.js","store/sagas/resumeSaga.js","store/sagas/indexSaga.js","index.js","assets/choose-task.jpeg"],"names":["aux","props","children","library","add","faCamera","input","inputElement","inputClasses","UploadImage","isValid","shouldValidate","touched","push","elementType","react_default","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","AuxC","file","react_fontawesome_index_es","icon","src","alt","classes","button","buttonClasses","onClick","clicked","disabled","spinner","updateObject","oldObject","updatedProp","objectSpread","checkValidity","rule","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","AUTH_USER","AUTH_CHECK_TIMEOUT","AUTH_INITIATE_LOGOUT","AUTH_CHECK_STATE","SUBMIT_DATA","FETCH_USER","CHECK_USER_REQUESR_ID_STATE","SUBMIT_SKILLS","FETCH_SKILLS","CHECK_SKILLS_REQUEST_ID_STATE","SUBMIT_PORTFOLIO","FETCH_PORTFOLIO","CHECK_PORTFOLIO_REQUESTID_STATE","SUBMIT_RESUME","FETCH_RESUME","CHECK_RESUME_REQUEST_ID_STATE","authStart","type","authSuccess","token","userId","idToken","authFail","error","authCheckTimeOut","expirationTime","actionTypes","logout","logoutSucceed","setAuthRedirect","path","submitDataStart","submitDataSuccess","id","requestId","submitDataFail","fetchUserStart","fetchUserSuccess","userData","fetchUserFail","fetchUserRequestIdSuccess","submitSkillsStart","submitSkillsSuccess","submitSkillsFail","fetchSkills","fetchSkillsStart","fetchSkillsSuccess","skills","fetchSkillsFail","fetchSkillsRequestIdFromLocalSuccess","submitPortfolioStart","submitPortfolioSuccess","submitPortfolioFail","fetchPortfolioStart","fetchPortfolioSuccess","portfolioData","fetchPortfolioFail","fetchRequestIdFromLocalSuccess","submitResumeStart","submitResumeSuccess","submitResumeFail","fetchResumeStart","fetchResumeSuccess","resumeData","fetchResumeFail","fetchResumeRequestIdFromLocalSuccess","Auth","state","inputs","email","config","placeholder","validation","valid","password","isLogin","redirect","inputChangeHandler","event","controlName","updateInputs","_this","defineProperty","target","setState","switchAuthHandler","preventDefault","prevState","onAuthRedirect","submitHandler","onAuthUser","_this2","this","formElementArray","key","form","map","formElement","Input_Input","loading","Spinner_Spinner","isAuthenticated","react_router","to","errorMessage","message","Container","Row","Col","lg","onSubmit","Button_Button","Component","connect","auth","authRedirectPath","dispatch","actions","spanButton","UserData","profile","fname","lname","jobTitle","birth","phone","bio","uploadImage","formIsValid","inputName","addProfileImage","reader","FileReader","files","fileReader","onloadend","result","readAsDataURL","onSubmitHandler","profilePic","personalData","info","onSubmitData","userRedirectPath","onUserRedirect","formInputsArray","configer","onDrop","submited","UI_spanButton_spanButton","user","data","faPlus","SkillsData","skill_0","rate_0","i","addFormHandler","_updateObject2","incI","addInput","skillsData","skillsInfo","onSubmitSkills","setSkillsRedirect","onSetSkillsRedirect","ResumeData","title_0","companyName_0","position_0","from_0","to_0","description_0","onSubmitResume","resumeRedirect","onSetResumeRedirect","resume","setResumeRedirect","PortfolioData","thumbnail_0","link_0","addThumbnailImage","updateImage","portData","onSubmitPort","portRedirect","onSetPortRedirect","formElemnt","port","setPortfolioRedirect","navigationItem","react_router_dom","link","exact","activeClassName","faUserAlt","faBriefcase","faGripHorizontal","faSignOutAlt","faCogs","navigationItems","show","navigation_navigationItem_navigationItem","Layout","showNav","navToggleHandler","reachHome","navigation_navigationItems_navigationItems","skill","style","width","rate","Skills","onFetch","skillElement","skills_skill_skill","faCalendarAlt","faAt","faPhoneVolume","About","xl","Home","onNav","about","skills_skills","faStar","faPenAlt","resumeComponent","title","company","position","from","description","Resume","resumes","resumeElements","components_resume_resumeComponent","portfolio","img","pathname","Portfolio","Ports","portElement","portfolio_portfolioComponent","thumbnail","Logout","outApp","onLogout","ChooseTask","userRequestId","skillsRequestId","resumeRequestId","portRequestId","chooseTaskImage","App","onAutoLogin","onCheckPortfolioRequestId","onCheckResumeRequestId","onCheckSkillsRequestId","onCheckUserRequestId","routes","component","hoc_Layout_Layout","Boolean","window","location","hostname","match","initialState","reducer","arguments","undefined","action","authLogout","setUserRedirectPath","fetchDataStart","fetchDataSuccess","fetchDataFail","skillsSubmitStart","skillsSubmitSuccess","skillsSubmitFail","authSaga","authCheckState","authData","url","response","expirationDate","regenerator_default","wrap","_context","prev","next","put","returnSecureToken","axios","post","sent","Date","getTime","expiresIn","localStorage","setItem","localId","t0","stop","_marked","_context2","call","_marked2","_context3","delay","_marked3","_context4","getItem","_marked4","instance","create","baseURL","submitData","fetchUserSaga","checkUserRequestIdState","name","userSaga_marked","queryParms","get","userSaga_marked2","userSaga_marked3","submitSkillsSaga","fetchSkillsSaga","checkSkillsRequestIdState","skillsSaga_marked","queryParams","skillsArray","_key","skillsArrayArrenge","skillsSaga_marked2","skillsSaga_marked3","submitPortfolio","fetchPortfolio","checkPortfolioRequestIdState","portfolioSaga_marked","fetchPorts","portsArray","portsArrayArrange","portfolioSaga_marked2","portfolioSaga_marked3","submitResume","fetchResume","checkResumeRequestIdState","resumeSaga_marked","_fetchResume","resumeArray","resumeArrayArrange","resumeSaga_marked2","resumeSaga_marked3","watchAuth","watchPersonalData","watchSkillsData","watchPortfolioData","watchResumeData","all","takeEvery","indexSaga_marked","indexSaga_marked2","indexSaga_marked3","indexSaga_marked4","_context5","_marked5","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","userReducer","skillsReducer","portfolioReducer","resumeReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2360ca3f.chunk.js","sourcesContent":["const aux = ( props ) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\n// import ImageUploader from 'react-images-upload';\r\nimport Aux from '../../../hoc/AuxC';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport './Input.scss';\r\n\r\nlibrary.add(faCamera);\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [\"input\"];\r\n    const UploadImage = [\"upload\"];\r\n    if ( props.isValid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(\"Invalid\");\r\n        UploadImage.push(\"Invalid\");\r\n    }\r\n    switch ( props.elementType ) {\r\n        case 'input':\r\n            inputElement = <input \r\n                                className = {inputClasses.join(' ')}\r\n                                {...props.elementConfig}\r\n                                value = {props.value}\r\n                                onChange = {props.changed}\r\n                            />\r\n            break;\r\n        case 'textarea':\r\n            inputElement = <Aux>\r\n                                <textarea \r\n                                    className = {inputClasses.join(' ')}\r\n                                    {...props.elementConfig}\r\n                                    value = {props.value}\r\n                                    onChange = {props.changed}\r\n                                />\r\n                                <div className=\"seperate\"></div>\r\n                            </Aux>\r\n            break;\r\n        case 'inputFile':\r\n            inputClasses.push(\"file\");\r\n            inputElement = <Aux>\r\n                                <div className=\"seperate\"></div>\r\n                                <input \r\n                                    className = {inputClasses.join(' ')}\r\n                                    {...props.elementConfig}\r\n                                    onChange = {props.file}\r\n                                />\r\n                                <div className={UploadImage.join(' ')}>\r\n                                    <FontAwesomeIcon icon={faCamera}/>\r\n                                    <img src={props.src} alt=\"\" className=\"img-fluid d-block mx-auto\"/>\r\n                                </div>\r\n                           </Aux>\r\n            break;\r\n        case 'select':\r\n            inputElement = <select></select>\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                                className = {inputClasses.join(' ')}\r\n                                {...props.elementConfig}\r\n                                value = {props.value}\r\n                                onChange = {props.changed}\r\n                            />\r\n    }\r\n    return (\r\n        <div className={[\"input-group\", props.classes].join(' ')}>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst button = ( props ) => {\r\n    let buttonClasses = [\"button\"];\r\n    buttonClasses.push(props.classes);\r\n    return (\r\n        <button onClick={props.clicked} className={buttonClasses.join(' ')} disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default button;\r\n","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"spinner\">\r\n                <div className=\"bounce1\"></div>\r\n                <div className=\"bounce2\"></div>\r\n                <div className=\"bounce3\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default spinner;","export const updateObject = (oldObject, updatedProp) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProp\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rule) => {\r\n    let isValid = true;\r\n    if (!rule) {\r\n        return true;\r\n    }\r\n    if (rule.required) {\r\n        isValid = value.trim() !==  '' && isValid;\r\n    }\r\n    if (rule.minLength) {\r\n        isValid = value.length >= rule.minLength && isValid;\r\n    }\r\n    if (rule.maxLength) {\r\n        isValid = value.length <= rule.maxLength && isValid\r\n    }\r\n    if (rule.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rule.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n    return isValid;\r\n}","export const AUTH_USER = 'AUTH_USER';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_INITIATE_LOGOUT = 'AUTH_INITIATE_LOGOUT';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const AUTH_CHECK_STATE = 'AUTH_CHECK_STATE';\r\nexport const SET_AUTH_REDIRECT = 'SET_AUTH_REDIRECT';\r\nexport const REACH_HOME = 'REACH_HOME';\r\nexport const OUT_APP = 'OUT_APP';\r\n\r\nexport const SUBMIT_DATA = 'SUBMIT_DATA';\r\nexport const SUBMIT_DATA_START = 'SUBMIT_DATA_START';\r\nexport const SUBMIT_DATA_SUCCESS = 'SUBMIT_DATA_SUCCESS';\r\nexport const SUBMIT_DATA_FAIL = 'SUBMIT_DATA_FAIL';\r\nexport const SET_USER_REDIRECT = 'SET_USER_REDIRECT';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const FETCH_USER_START = 'FETCH_USER_START';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\r\nexport const CHECK_USER_REQUESR_ID_STATE = 'CHECK_USER_REQUESR_ID_STATE';\r\nexport const FETCH_USER_REQUEST_ID_SUCCESS = 'FETCH_USER_REQUEST_ID_SUCCESS';\r\n\r\nexport const SUBMIT_SKILLS = 'SUBMIT_SKILLS';\r\nexport const SUBMIT_SKILLS_START = 'SUBMIT_SKILLS_START';\r\nexport const SUBMIT_SKILLS_SUCCESS = 'SUBMIT_SKILLS_SUCCESS';\r\nexport const SUBMIT_SKILLS_FAIL = 'SUBMIT_SKILLS_FAIL';\r\nexport const SET_SKILLS_REDIRECT = 'SET_SKILLS_REDIRECT';\r\nexport const FETCH_SKILLS = 'FETCH_SKILLS';\r\nexport const FETCH_SKILLS_START = 'FETCH_SKILLS_START';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CHECK_SKILLS_REQUEST_ID_STATE = 'CHECK_SKILLS_REQUEST_ID_STATE';\r\nexport const FETCH_SKILLS_REQUEST_ID_FROM_LOCAL_SUCCESS = 'FETCH_SKILLS_REQUEST_ID_FROM_LOCAL_SUCCESS';\r\n\r\nexport const SUBMIT_PORTFOLIO = 'SUBMIT_PORTFOLIO';\r\nexport const SUBMIT_PORTFOLIO_START = 'SUBMIT_PORTFOLIO_START';\r\nexport const SUBMIT_PORTFOLIO_SUCCESS = 'SUBMIT_PORTFOLIO_SUCCESS';\r\nexport const SUBMIT_PORTFOLIO_FAIL = 'SUBMIT_PORTFOLIO_FAIL';\r\nexport const SET_PORTFOLIO_REDIRECT = 'SET_PORTFOLIO_REDIRECT';\r\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\r\nexport const FETCH_PORTFOLIO_START = 'FETCH_PORTFOLIO_START';\r\nexport const FETCH_PORTFOLIO_SUCCESS = 'FETCH_PORTFOLIO_SUCCESS';\r\nexport const FETCH_PORTFOLIO_FAIL = 'FETCH_PORTFOLIO_FAIL';\r\nexport const CHECK_PORTFOLIO_REQUESTID_STATE = 'CHECK_PORTFOLIO_REQUESTID_STATE';\r\nexport const FETCH_PORT_REQUESTID_FROM_LOCAL_SUCCESS = 'FETCH_PORT_REQUESTID_FROM_LOCAL_SUCCESS';\r\n\r\nexport const SUBMIT_RESUME = 'SUBMIT_RESUME';\r\nexport const SUBMIT_RESUME_START = 'SUBMIT_RESUME_START';\r\nexport const SUBMIT_RESUME_SUCCESS = 'SUBMIT_RESUME_SUCCESS';\r\nexport const SUBMIT_RESUME_FAIL = 'SUBMIT_RESUME_FAIL';\r\nexport const SET_RESUME_REDIRECT = 'SET_RESUME_REDIRECT';\r\nexport const FETCH_RESUME = 'FETCH_RESUME';\r\nexport const FETCH_RESUME_START = 'FETCH_RESUME_START';\r\nexport const FETCH_RESUME_SUCCESS = 'FETCH_RESUME_SUCCESS';\r\nexport const FETCH_RESUME_FAIL = 'FETCH_RESUME_FAIL';\r\nexport const CHECK_RESUME_REQUEST_ID_STATE = 'CHECK_RESUME_REQUEST_ID_STATE';\r\nexport const FETCH_RESUME_REQUEST_ID_FROM_LOCAL_SUCCESS = 'FETCH_RESUME_REQUEST_ID_FROM_LOCAL_SUCCESS';","import * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken : token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const authUser = (email, password, isLogin) => {\r\n    return {\r\n        type: actionTypes.AUTH_USER,\r\n        email: email,\r\n        password: password,\r\n        isLogin: isLogin\r\n    }\r\n}\r\n\r\nexport const authCheckTimeOut = (expirationTime) => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\r\n        expirationTime: expirationTime\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionTypes.AUTH_INITIATE_LOGOUT\r\n    }\r\n}\r\n\r\nexport const logoutSucceed = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_STATE\r\n    }\r\n}\r\n\r\nexport const setAuthRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const reachHome = () => {\r\n    return {\r\n        type: actionTypes.REACH_HOME\r\n    }\r\n}\r\n\r\nexport const outApp = () => {\r\n    return {\r\n        type: actionTypes.OUT_APP\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitData = (token, personalData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA,\r\n        data: personalData,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const submitDataStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_START\r\n    }\r\n}\r\n\r\nexport const submitDataSuccess = (id) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_SUCCESS,\r\n        requestId: id\r\n    }\r\n}\r\n\r\nexport const submitDataFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setUserRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_USER_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchUser = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchUserStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_START\r\n    }\r\n}\r\n\r\nexport const fetchUserSuccess = (userData) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_SUCCESS,\r\n        userData: userData\r\n    }\r\n}\r\n\r\nexport const fetchUserFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const checkUserRequestIdState = () => {\r\n    return {\r\n        type: actionTypes.CHECK_USER_REQUESR_ID_STATE\r\n    }\r\n}\r\n\r\nexport const fetchUserRequestIdSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_REQUEST_ID_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitSkills = (token, skillsData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS,\r\n        token: token,\r\n        skillsData: skillsData\r\n    }\r\n}\r\n\r\nexport const submitSkillsStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_START\r\n    }\r\n}\r\n\r\nexport const submitSkillsSuccess = (id) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_SUCCESS,\r\n        requestId: id\r\n      \r\n    }\r\n}\r\n\r\nexport const submitSkillsFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setSkillsRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_SKILLS_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchSkills = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchSkillsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_START\r\n    }\r\n}\r\n\r\nexport const fetchSkillsSuccess = (skills) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_SUCCESS,\r\n        skills: skills\r\n    }\r\n}\r\n\r\nexport const fetchSkillsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const checkSkillsRequestIdState = () => {\r\n    return {\r\n        type: actionTypes.CHECK_SKILLS_REQUEST_ID_STATE\r\n    }\r\n}\r\n\r\nexport const fetchSkillsRequestIdFromLocalSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_REQUEST_ID_FROM_LOCAL_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitPortfolio = (token, portfolioData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO,\r\n        token: token,\r\n        portfolioData: portfolioData\r\n    }\r\n}\r\n\r\nexport const submitPortfolioStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_START\r\n    }\r\n}\r\n\r\nexport const submitPortfolioSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}\r\n\r\nexport const submitPortfolioFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setPortfolioRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_PORTFOLIO_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchPortfolio = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_START\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioSuccess = (portfolioData) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_SUCCESS,\r\n        portfolioData: portfolioData\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const checkPortfolioRequestIdState = () => {\r\n    return {\r\n        type: actionTypes.CHECK_PORTFOLIO_REQUESTID_STATE\r\n    }\r\n}\r\n\r\nexport const fetchRequestIdFromLocalSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORT_REQUESTID_FROM_LOCAL_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitResume = (token, resumeData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME,\r\n        token: token,\r\n        resumeData: resumeData\r\n    };\r\n};\r\n\r\nexport const submitResumeStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_START\r\n    };\r\n};\r\n\r\nexport const submitResumeSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_SUCCESS,\r\n        requestId: requestId\r\n    };\r\n};\r\n\r\nexport const submitResumeFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const setResumeRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_RESUME_REDIRECT,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const fetchResume = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchResumeStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_START\r\n    }\r\n}\r\n\r\nexport const fetchResumeSuccess = (resumeData) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_SUCCESS,\r\n        resumeData: resumeData\r\n    }\r\n}\r\n\r\nexport const fetchResumeFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const checkResumeRequestIdState  = () => {\r\n    return {\r\n        type: actionTypes.CHECK_RESUME_REQUEST_ID_STATE\r\n    }\r\n}\r\n\r\nexport const fetchResumeRequestIdFromLocalSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_REQUEST_ID_FROM_LOCAL_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { updateObject, checkValidity } from '../../shared/Utility';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport './auth.scss';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        inputs: {\r\n            email: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'email',\r\n                    placeholder: 'Type your email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'password',\r\n                    placeholder: 'Type a strong password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isLogin:true,\r\n        redirect: '/home'\r\n    }\r\n\r\n\r\n    inputChangeHandler = (event, controlName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [controlName]: updateObject(this.state.inputs[controlName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[controlName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        this.setState({inputs: updateInputs});\r\n    }\r\n\r\n    switchAuthHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => {\r\n            return {isLogin: !prevState.isLogin}\r\n        }, () => {\r\n            if (this.state.isLogin) {\r\n                this.setState(prevState => {\r\n                    return {redirect: prevState.redirect= '/home'}\r\n                }, () => this.props.onAuthRedirect(this.state.redirect));\r\n            }\r\n            if (!this.state.isLogin) {\r\n                this.setState(prevState => {\r\n                    return {redirect: prevState.redirect= '/chooseTask'}\r\n                }, () => this.props.onAuthRedirect(this.state.redirect))\r\n            }\r\n        });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuthUser(this.state.inputs.email.value, this.state.inputs.password.value, this.state.isLogin);\r\n    }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.inputs[key]\r\n            })\r\n        }\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.config.elementType}\r\n                elementConfig = {formElement.config.config}\r\n                value = {formElement.config.value}\r\n                isValid = {!formElement.config.valid}\r\n                touched = {formElement.config.touched}\r\n                shouldValidate = {formElement.config.validation}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if ( this.props.isAuthenticated && this.state.isLogin ) {\r\n            redirect = <Redirect to = '/home'/>\r\n        }\r\n\r\n        if ( this.props.isAuthenticated && !this.state.isLogin ) {\r\n            redirect = <Redirect to = '/chooseTask'/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"auth\">\r\n                {redirect}\r\n                <Container>\r\n                    <Row className=\"justify-content-center align-items-center\">\r\n                        <Col lg = '6' className=\"content\">\r\n                            {spinner}\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <h2>{this.state.isLogin? \"Log in to your profile\" : \"Create Your own profile\"} </h2>\r\n                                {errorMessage}\r\n                                {form}\r\n                                <Button>{this.state.isLogin? \"Log in\": \"Sign up\"}</Button>\r\n                            </form>\r\n                            <div className=\"seperate\"></div>\r\n                            <p>\r\n                                    {\r\n                                        this.state.isLogin? \r\n                                           \"You don't have an account?\"\r\n                                           :\r\n                                           \"Already have an account?\"\r\n                                    }\r\n                            </p>\r\n                            <Button classes=\"switch\" clicked = {this.switchAuthHandler}>\r\n                                {this.state.isLogin? \"Sign up\": \"Log in\"}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n        isAuthenticated: state.auth.token !== null,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuthUser: (email, password, isLogin) => dispatch(actions.authUser(email, password, isLogin)),\r\n        onAuthRedirect: (path) => dispatch(actions.setAuthRedirect(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport './spanButton.scss';\r\n\r\nconst spanButton = () => (\r\n    <span className=\"span-button\">\r\n        Next\r\n    </span>\r\n);\r\n\r\nexport default spanButton;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport '../formsData.scss';\r\n\r\nclass UserData extends Component {\r\n    state = {\r\n        inputs : {\r\n            profile : {\r\n                elementType: 'inputFile',\r\n                config: {\r\n                    type: 'file',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            },\r\n            fname : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your first name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            lname : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your last name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            jobTitle : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your job title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true, \r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            birth : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'date',\r\n                    placeholder: 'Date of birth'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            phone : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your phone number'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 11,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            email : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'email',\r\n                    placeholder: 'Type your email address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            bio : {\r\n                elementType: 'textarea',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Tell us about yourself'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-12'\r\n            },\r\n        },\r\n        uploadImage: '',\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.userRedirectPath !== '/chooseTask') {\r\n            this.props.onUserRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid: formIsValid});\r\n    }\r\n\r\n    addProfileImage = (event) => {\r\n        event.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        const fileReader = updateObject(this.state.inputs, {\r\n            \"profile\" : {\r\n                ...this.state.inputs.profile,\r\n                touched:true,\r\n                valid:true\r\n            }\r\n        })\r\n        reader.onloadend = () => {\r\n            this.setState({uploadImage: reader.result, inputs:fileReader})\r\n        };\r\n        if ( event.target.files[0] ) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const userData = {};\r\n        for ( let key in this.state.inputs) {\r\n            userData[key] = this.state.inputs[key].value\r\n        }\r\n        const profilePic = this.state.uploadImage;\r\n        const personalData = {\r\n            info: {\r\n                ...userData,\r\n                \"profile\": profilePic\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitData(this.props.token, personalData);\r\n    }\r\n\r\n    render () {\r\n        const formInputsArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formInputsArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formInputsArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                value = {formElement.configer.value}\r\n                elementType = {formElement.configer.elementType}\r\n                touched = {formElement.configer.touched}\r\n                isValid = {!formElement.configer.valid}\r\n                shouldValidate = {formElement.configer.validation}\r\n                elementConfig = {formElement.configer.config}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n                classes = {formElement.configer.classes}\r\n                onDrop = {this.onDrop}\r\n                file = {(event) => this.addProfileImage(event)}\r\n                src = {this.state.uploadImage}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.submited) {\r\n            redirect = <Redirect to = {this.props.userRedirectPath} />\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n\r\n        return (\r\n            <section className=\"data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.onSubmitHandler}>\r\n                        {spinner}\r\n                        <h2>Start creating your profile</h2>\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.user.loading,\r\n        userRedirectPath: state.user.userRedirectPath,\r\n        submited: state.user.requestId !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitData: (token, data) => dispatch(actions.submitData(token, data)),\r\n        onUserRedirect: () => dispatch(actions.setUserRedirectPath('/chooseTask'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserData);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport '../formsData.scss';\r\n\r\nlibrary.add(faPlus);\r\n\r\nclass SkillsData extends Component {\r\n    state = {\r\n        inputs: {\r\n            skill_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your skill'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            rate_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type this skill rate'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    maxLength: 3,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.setSkillsRedirect !== '/chooseTask') {\r\n            this.props.onSetSkillsRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid: formIsValid});\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"skill_\" + i] : {\r\n                ...this.state.inputs[\"skill_0\"],\r\n                value: '',\r\n                touched: false,\r\n                valid: false\r\n            },\r\n            [\"rate_\" + i] : {\r\n                ...this.state.inputs[\"rate_0\"],\r\n                value: '',\r\n                touched: false,\r\n                valid: false\r\n            },\r\n        });\r\n        this.setState({inputs:addInput, i:incI.i, formIsValid: false});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const skillsData = {};\r\n        for (let key in this.state.inputs) {\r\n            skillsData[key] = this.state.inputs[key].value\r\n        }\r\n        const skillsInfo = {\r\n            info: {\r\n                ...skillsData\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitSkills(this.props.token, skillsInfo);\r\n    }\r\n\r\n    render () {\r\n        const formInputsArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formInputsArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formInputsArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.configer.elementType}\r\n                value = {formElement.configer.value}\r\n                touched = {formElement.configer.touched}\r\n                elementConfig = {formElement.configer.config}\r\n                classes = {formElement.configer.classes}\r\n                shouldValidate = {formElement.configer.validation}\r\n                isValid = {!formElement.configer.valid}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId) {\r\n            redirect = <Redirect to = {this.props.setSkillsRedirect}/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"skill-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start Adding your Skills</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add Another skill?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        token: state.auth.token,\r\n        loading: state.skills.loading,\r\n        requestId: state.skills.requestId !== null,\r\n        setSkillsRedirect: state.skills.setSkillsRedirect,\r\n        error: state.skills.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitSkills: (token, data) => dispatch(actions.submitSkills(token, data)),\r\n        onSetSkillsRedirect: () => dispatch(actions.setSkillsRedirect('/chooseTask'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillsData);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport '../formsData.scss'; \r\n\r\nlibrary.add(faPlus);\r\n\r\nclass ResumeData extends Component {\r\n    state = {\r\n        inputs: {\r\n            title_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            companyName_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Company name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            position_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'What is your position in this company?'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            },\r\n            from_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'from...ex(2016, 2018...etc)'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength:4,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            to_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'to...ex(2016, 2018...etc)'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength:4,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            description_0 : {\r\n                elementType: 'textarea',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Description...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            }\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.resumeRedirect !== '/chooseTask') {\r\n            this.props.onSetResumeRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs:updateInputs, formIsValid:formIsValid})\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"title_\" + i] : {\r\n                ...this.state.inputs[\"title_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"companyName_\" + i] : {\r\n                ...this.state.inputs[\"companyName_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"position_\" + i] : {\r\n                ...this.state.inputs[\"position_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"from_\" + i] : {\r\n                ...this.state.inputs[\"from_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"to_\" + i] : {\r\n                ...this.state.inputs[\"to_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"description_\" + i] : {\r\n                ...this.state.inputs[\"description_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            }\r\n        });\r\n        this.setState({inputs:addInput, i: incI.i, formIsValid: false})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const data = {};\r\n        for (let key in this.state.inputs) {\r\n            data[key] = this.state.inputs[key].value\r\n        }\r\n        const resumeData = {\r\n            info: {\r\n                ...data\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitResume(this.props.token, resumeData);\r\n    }\r\n\r\n    render () {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.configer.elementType}\r\n                value = {formElement.configer.value}\r\n                touched = {formElement.configer.touched}\r\n                isValid = {!formElement.configer.valid}\r\n                shouldValidate = {formElement.configer.validation}\r\n                classes = {formElement.configer.classes}\r\n                elementConfig = {formElement.configer.config}\r\n                changed = {(event) =>this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId !== null) {\r\n            redirect = <Redirect to = {this.props.resumeRedirect} />\r\n        }\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"resume-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start adding your career history</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add More information?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.resume.loading,\r\n        requestId: state.resume.requestId,\r\n        resumeRedirect: state.resume.setResumeRedirect,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        error: state.resume.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitResume: (token, data) => dispatch(actions.submitResume(token, data)),\r\n        onSetResumeRedirect: () => dispatch(actions.setResumeRedirect('/chooseTask'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResumeData);","import React, { Component } from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport '../formsData.scss';\r\n\r\nlibrary.add(faPlus);\r\n\r\nclass PortfolioData extends Component {\r\n    state = {\r\n        inputs: {\r\n            thumbnail_0: {\r\n                elementType: 'inputFile',\r\n                config: {\r\n                    type: 'file'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                classes: 'col-lg-12',\r\n                uploadImage: ''\r\n            },\r\n            title_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            link_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Put the link to this item'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            }\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.portRedirect !== '/chooseTask') {\r\n            this.props.onSetPortRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName]: updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                touched: true,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation)\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid:formIsValid});\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"thumbnail_\" + i]: {\r\n                ...this.state.inputs[\"thumbnail_0\"],\r\n                value: '',\r\n                valid: true,\r\n                touched: false,\r\n                uploadImage: ''\r\n            },\r\n            [\"title_\" + i]: {\r\n                ...this.state.inputs[\"title_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            [\"link_\" + i]: {\r\n                ...this.state.inputs[\"link_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        });\r\n        this.setState({inputs:addInput, i: incI.i, formIsValid:false})\r\n    }\r\n\r\n    addThumbnailImage = (event, inputName) => {\r\n        event.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        // console.log(event.target.value);\r\n        reader.onloadend = () => {\r\n            const updateImage = updateObject(this.state.inputs, {\r\n                [inputName]: updateObject(this.state.inputs[inputName], {\r\n                    uploadImage: reader.result,\r\n                    touched:true,\r\n                    valid:true\r\n                })\r\n            });\r\n            \r\n            this.setState({inputs:updateImage})\r\n        };\r\n        if ( event.target.files[0] ) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const data = {};\r\n        for (let key in this.state.inputs) {\r\n            data[key] = this.state.inputs[key].uploadImage;\r\n            if (this.state.inputs[key].uploadImage == null) {\r\n                data[key] = this.state.inputs[key].value;\r\n            }\r\n        }\r\n        const portData = {\r\n            info: {\r\n                ...data\r\n            },\r\n            userId: this.props.userId\r\n        };\r\n        this.props.onSubmitPort(this.props.token, portData);\r\n    }\r\n\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementArray.map(formElemnt => (\r\n            <Input \r\n                key = {formElemnt.id}\r\n                value = {formElemnt.configer.value}\r\n                elementType = {formElemnt.configer.elementType}\r\n                isValid = {!formElemnt.configer.valid}\r\n                touched = {formElemnt.configer.touched}\r\n                classes = {formElemnt.configer.classes}\r\n                shouldValidate = {formElemnt.configer.validation}\r\n                elementConfig = {formElemnt.configer.config}\r\n                changed = {(event) => this.inputChangeHandler(event, formElemnt.id)}\r\n                file = {(event) => this.addThumbnailImage(event, formElemnt.id)}\r\n                src = {formElemnt.configer.uploadImage}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId) {\r\n            redirect = <Redirect to = {this.props.portRedirect} />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"port-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start adding your works</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add More works?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.port.loading,\r\n        requestId: state.port.requestId !== null,\r\n        portRedirect: state.port.setPortfolioRedirect,\r\n        userId: state.auth.userId,\r\n        token: state.auth.token,\r\n        error: state.port.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitPort: (token, data) => dispatch(actions.submitPortfolio(token, data)),\r\n        onSetPortRedirect: () => dispatch(actions.setPortfolioRedirect('/chooseTask'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortfolioData);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './navigationItem.scss';\r\n\r\nconst navigationItem = ( props ) => (\r\n    <li className = \"navItem\">\r\n        <NavLink to = {props.link} exact = {props.exact} activeClassName = \"active\">{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from '../navigationItem/navigationItem';\r\nimport './navigationItems.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserAlt, faBriefcase, faGripHorizontal, faSignOutAlt, faCogs } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faUserAlt, faBriefcase, faGripHorizontal, faSignOutAlt, faCogs);\r\n\r\nconst navigationItems = ( props ) => {\r\n    let classes = \"closed\";\r\n    if (props.show) {\r\n        classes = \"opened\"\r\n    }\r\n    return (<nav className = {classes}>\r\n                <ul className=\"list-unstyled\">\r\n                    <NavigationItem link = \"/home\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faUserAlt}/>\r\n                        <span>My Profile</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/portfolio\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faBriefcase} />\r\n                        <span>My Portfolio</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/resume\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faGripHorizontal} />\r\n                        <span>My Resume</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/logout\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faSignOutAlt} />\r\n                        <span>Log out</span>\r\n                    </NavigationItem>\r\n                </ul>\r\n                <span className=\"option\" onClick = {props.clicked}>\r\n                    <FontAwesomeIcon icon = {faCogs} />\r\n                </span>\r\n        </nav>);\r\n};\r\n\r\nexport default navigationItems;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../AuxC';\r\nimport NavigationItems from '../../components/navigation/navigationItems/navigationItems';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showNav: false\r\n    }\r\n\r\n\r\n    navToggleHandler = () => {\r\n        this.setState(prevState => {\r\n            return {showNav: !prevState.showNav}\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                {this.props.reachHome? <NavigationItems show = {this.state.showNav} clicked = {this.navToggleHandler}/>: null}\r\n                {this.props.children}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reachHome: state.auth.reachHome\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport './skill.scss';\r\n\r\nconst skill = ( props ) => (\r\n    <div className=\"skill\">\r\n        <div className=\"rate\" style={{\r\n            width: props.rate\r\n        }}>\r\n            <p>{props.skill}</p>\r\n            <span>{props.rate}</span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default skill;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport Skill from './skill/skill';\r\n\r\nclass Skills extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let skills = null;\r\n        \r\n        if (this.props.loading) {\r\n            skills = <Spinner />;\r\n        }\r\n       \r\n        if (this.props.skillsData !== null && !this.props.loading) {\r\n            skills = this.props.skillsData.map(skillElement => (\r\n                <Skill key = {skillElement.id} skill = {skillElement.skill} rate = {skillElement.rate + \"%\"}/>\r\n            ))\r\n        }\r\n        \r\n        return (\r\n            <div className=\"skills\">\r\n                <h3>Skills</h3>\r\n                {skills}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.skills.loading,\r\n        skillsData: state.skills.skillsData,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchSkills(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Skills);","import React, { Component } from 'react';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/AuxC'\r\nimport { Col } from 'reactstrap';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faAt, faPhoneVolume } from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nlibrary.add(faCalendarAlt, faAt, faPhoneVolume);\r\n\r\nclass About extends Component {\r\n    componentDidMount () {\r\n        if (this.props.token !== null && this.props.userId !== null) {\r\n            this.props.onFetch(this.props.token, this.props.userId);\r\n        }\r\n        // this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n\r\n        let userData = null;\r\n\r\n        if (this.props.loading) {\r\n            userData = <Spinner />\r\n        }\r\n\r\n        if (this.props.data !== null && !this.props.loading) {\r\n            userData = (\r\n                <Aux>\r\n                    <Col xl = '4' lg = '6'>\r\n                    <div className=\"profile\">\r\n                        <img src = {this.props.data.profile} alt=\"Profile: usually contains a person\" className=\"d-block mx-auto img-fluid\"/>\r\n                    </div>\r\n                    </Col>\r\n                    <Col xl = '8' lg = '6'>\r\n                        <h2>Hello, I'm {this.props.data.fname} {this.props.data.lname}</h2>\r\n                        <p className=\"title\">I'm a {this.props.data.jobTitle}</p>\r\n                        <p className=\"desc\">{this.props.data.bio}</p>\r\n                        <ul className=\"list-unstyled info\">\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faCalendarAlt} /></span>\r\n                                <p><span>Date of birth:</span> {this.props.data.birth}</p>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faAt} /></span>\r\n                                <p><span>Email:</span> {this.props.data.email}</p>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faPhoneVolume} /></span>\r\n                                <p><span>Phone:</span> {this.props.data.phone}</p>\r\n                            </li>\r\n                        </ul>\r\n                    </Col>\r\n                </Aux>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {userData}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        data: state.user.data,\r\n        loading: state.user.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchUser(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport './Home.scss';\r\nimport Skills from '../../components/skills/skills';\r\nimport About from '../../components/about/about';\r\n\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.onNav();\r\n        this.props.onAuthRedirect('/home');\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <section className=\"home\">\r\n                <Row>\r\n                    <About />\r\n                    <Col lg='12'>\r\n                        <Skills />\r\n                    </Col>\r\n                </Row>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchSkills(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome()),\r\n        onAuthRedirect: (path) => dispatch(actions.setAuthRedirect(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\r\nimport Aux from '../../hoc/AuxC';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faCalendarAlt, faPenAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport './resumeComponent.scss';\r\n\r\nlibrary.add(faStar, faCalendarAlt, faPenAlt);\r\n\r\nconst resumeComponent = ( props ) => (\r\n    <Aux>\r\n        <div className = \"resume-box col-xl-6 col-lg-12\">\r\n            <div className = \"title\"><h3>{props.title} at {props.company}</h3></div>\r\n                <div className = \"resume-content\">\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faStar} />\r\n                            </span>\r\n                                \r\n                            <p>\r\n                                <span className = \"info-title\">Position: </span>\r\n                                {props.position}\r\n                            </p>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faCalendarAlt} />\r\n                            </span>\r\n                            <p><span className = \"info-title\">from</span> <span className=\"date\">{props.from}</span> <span className = \"info-title\">to</span> <span className=\"date\">{props.to}</span></p>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faPenAlt} />\r\n                            </span>\r\n                            <p>{props.description}</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {/*resume-content*/}\r\n        </div>\r\n        {/* resume-box */}\r\n    </Aux>\r\n);\r\n\r\nexport default resumeComponent;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { Container, Row } from 'reactstrap';\r\nimport ResumeComponent from '../../components/resume/resumeComponent';\r\nimport './resume.scss';\r\n\r\nclass Resume extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onNav();\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let resumes = null;\r\n\r\n        if (this.props.loading) {\r\n            resumes = <Spinner />\r\n        }\r\n\r\n        if (this.props.resumeData !== null && !this.props.loading) {\r\n            resumes = this.props.resumeData.map(resumeElements => (\r\n                <ResumeComponent\r\n                    key = {resumeElements.id}\r\n                    title = {resumeElements.title}\r\n                    company = {resumeElements.company}\r\n                    position = {resumeElements.position}\r\n                    from = {resumeElements.from}\r\n                    to = {resumeElements.to}\r\n                    description = {resumeElements.description}\r\n                 />\r\n            ));\r\n        }\r\n\r\n        return (\r\n            <section className = \"resume\">\r\n                <h2 className = \"text-center\">My career history</h2>\r\n                <Container>\r\n                    <Row>\r\n                        {resumes}\r\n                    </Row>\r\n                </Container>\r\n                \r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.resume.loading,\r\n        resumeData: state.resume.resumeData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchResume(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps ,mapDispatchToProps)(Resume);","import React from 'react';\r\nimport Aux from '../../hoc/AuxC';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './portfolioComponent.scss';\r\n\r\nconst portfolio = ( props ) => (\r\n    <Aux>\r\n        <div className = \"col-xl-4 col-lg-6\">\r\n            <div className = \"port-container\">\r\n                <img src = {props.img} className = \"img-fluid d-block mx-auto\" alt = \"Portfolio: may contains special works\"/>\r\n                <div className = \"overlay title\">\r\n                    <h3>{props.title}</h3>\r\n                </div>\r\n                <div className = \"overlay link\">\r\n                    <Link target=\"_blank\" to = {{\r\n                        pathname: props.link\r\n                    }}>view</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\nexport default portfolio;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PortfolioComponent from '../../components/portfolio/portfolioComponent';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport './portfolio.scss';\r\n\r\nclass Portfolio extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onNav();\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let Ports = null;\r\n\r\n        if (this.props.loading) {\r\n            Ports = <Spinner />\r\n        }\r\n        if (this.props.portfolioData !== null && !this.props.loading) {\r\n            Ports = this.props.portfolioData.map(portElement => (\r\n                <PortfolioComponent \r\n                    key = {portElement.id}\r\n                    title = {portElement.title}\r\n                    img = {portElement.thumbnail}\r\n                    link = {portElement.link}\r\n                />\r\n            ))\r\n        }\r\n\r\n        return (\r\n            <section className = \"portfolio\">\r\n                <h2 className = \"text-center\">My Works</h2>\r\n                <Container>\r\n                    <Row>\r\n                        {Ports}\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.port.loading,\r\n        portfolioData: state.port.portfolioData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchPortfolio(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Portfolio);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.outApp();\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to = \"/\" />\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout()),\r\n        outApp: () => dispatch(actions.outApp())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport NavigationItem from '../../components/navigation/navigationItem/navigationItem';\r\nimport chooseTaskImage from '../../assets/choose-task.jpeg';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport \"./ChooseTask.scss\";\r\n\r\nclass ChooseTask extends Component {\r\n    render () {\r\n\r\n        let redirect = null;\r\n        if (this.props.userRequestId && this.props.skillsRequestId && this.props.resumeRequestId && this.props.portRequestId) {\r\n            redirect = <Redirect to = '/home' />\r\n        }\r\n\r\n        return  (\r\n        <section className=\"chooseTask\">\r\n            {redirect}\r\n            <div className=\"container\">\r\n                <div className=\"justify-content-center align-items-center row\">\r\n                    <div className=\"col-lg-9 \">\r\n                        <div className=\"content row\">\r\n                            <div className=\"col-lg-6 sp\">\r\n                                <div className=\"pic\">\r\n                                    <div className=\"pic\">\r\n                                        <img src = {chooseTaskImage} className=\"img-fluid d-block mx-auto\" alt=\"contains peaple looking at a computer\"/>\r\n                                        <div className=\"blur\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 sp\">\r\n                                <nav className=\"chooseTaskNav\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {this.props.userRequestId? null: <NavigationItem link = \"/data\" exact = {true}>Start adding your personal data</NavigationItem>}\r\n                                        {this.props.skillsRequestId? null: <NavigationItem link = \"/skillsData\" exact = {true}>Start adding your Skills</NavigationItem>}\r\n                                        {this.props.resumeRequestId? null: <NavigationItem link = \"/resumeData\" exact = {true}>Start adding your career history</NavigationItem>}\r\n                                        {this.props.portRequestId? null: <NavigationItem link = \"/portfolioData\" exact = {true}>Start adding your works</NavigationItem>}\r\n                                        <NavigationItem link = \"/home\" exact = {true}>\r\n                                            <Button classes=\"tasksButton\">Skip tasks to your profile</Button>\r\n                                        </NavigationItem>\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div> {/*content*/ }\r\n                    </div> {/*col-lg-9*/ }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        portRequestId: state.port.requestId !== null,\r\n        resumeRequestId: state.resume.requestId !== null,\r\n        skillsRequestId: state.skills.requestId !== null,\r\n        userRequestId: state.user.requestId !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChooseTask);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Auth from './containers/auth/auth';\nimport UserData from './containers/getDataForms/UserData/UserData';\nimport SkillsData from './containers/getDataForms/SkillsData/SkillsData';\nimport ResumeData from './containers/getDataForms/ResumeData/ResumeData';\nimport PortfolioData from './containers/getDataForms/PortfolioData/PortfolioData';\nimport Layout from './hoc/Layout/Layout';\nimport Home from './containers/Home/Home';\nimport Resume from './containers/resume/resume';\nimport Portfolio from './containers/portfolios/portfolio';\nimport Logout from './containers/auth/Logout/Logout';\nimport ChooseTask from './containers/ChooseTask/ChooseTask';\nimport * as actions from './store/actions/indexActions';\nimport './App.scss';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onAutoLogin();\n    this.props.onCheckPortfolioRequestId();\n    this.props.onCheckResumeRequestId();\n    this.props.onCheckSkillsRequestId();\n    this.props.onCheckUserRequestId();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path = '/' exact component = {Auth}/>\n        <Route path = '/logout' exact component = {Logout}/>\n      </Switch>\n    );\n\n    if (this.props.token) {\n      routes = (\n        <Switch>\n          <Route path = '/chooseTask' exact component = {ChooseTask}/>\n          <Route path = '/data' component = {UserData}/>\n          <Route path = '/skillsData' component = {SkillsData}/>\n          <Route path = '/resumeData' component = {ResumeData}/>\n          <Route path = '/portfolioData' component = {PortfolioData}/>\n          <Route path = '/home' component = {Home}/>\n          <Route path = '/resume' exact component = {Resume}/>\n          <Route path = '/portfolio' exact component = {Portfolio}/>\n          <Route path = '/logout' exact component = {Logout}/>\n          <Redirect to= {this.props.redirect} />\n        </Switch>\n      );\n    }\n    return (\n      <div>\n        <Layout>\n            {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token !== null,\n    redirect: state.auth.authRedirectPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoLogin: () => dispatch(actions.authCheckState()),\n    onCheckPortfolioRequestId: () => dispatch(actions.checkPortfolioRequestIdState()),\n    onCheckResumeRequestId: () => dispatch(actions.checkResumeRequestIdState()),\n    onCheckSkillsRequestId: () => dispatch(actions.checkSkillsRequestIdState()),\n    onCheckUserRequestId: () => dispatch(actions.checkUserRequestIdState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/home',\r\n    reachHome: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading:false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n}\r\n\r\nconst setAuthRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath: action.path\r\n    });\r\n}\r\n\r\nconst reachHome = (state, action) => {\r\n    return updateObject(state, {\r\n        reachHome: true\r\n    });\r\n}\r\n\r\nconst outApp = (state, action) => {\r\n    return updateObject(state, {\r\n        reachHome: false\r\n    })\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT: return setAuthRedirect(state, action);\r\n        case actionTypes.REACH_HOME: return reachHome(state, action);\r\n        case actionTypes.OUT_APP: return outApp(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    userRedirectPath: '/chooseTask',\r\n    data: null,\r\n    requestId: null\r\n}\r\n\r\nconst submitDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    })\r\n}\r\n\r\nconst submitDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null,\r\n        requestId: action.requestId\r\n    });\r\n}\r\n\r\nconst submitDataFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst setUserRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        userRedirectPath: action.path\r\n    });\r\n}\r\n\r\nconst fetchDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        data: action.userData,\r\n        loading:false,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchDataFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst fetchUserRequestIdSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_DATA_START: return submitDataStart(state, action);\r\n        case actionTypes.SUBMIT_DATA_SUCCESS: return submitDataSuccess(state, action);\r\n        case actionTypes.SUBMIT_DATA_FAIL: return submitDataFail(state, action);\r\n        case actionTypes.SET_USER_REDIRECT: return setUserRedirectPath(state, action);\r\n        case actionTypes.FETCH_USER_START: return fetchDataStart(state, action);\r\n        case actionTypes.FETCH_USER_SUCCESS: return fetchDataSuccess(state, action);\r\n        case actionTypes.FETCH_USER_FAIL: return fetchDataFail(state, action);\r\n        case actionTypes.FETCH_USER_REQUEST_ID_SUCCESS: return fetchUserRequestIdSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading:false,\r\n    error: null,\r\n    skillsData: null,\r\n    requestId: null,\r\n    setSkillsRedirect: '/chooseTask'\r\n}\r\n\r\nconst skillsSubmitStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst skillsSubmitFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst skillsSubmitSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null,\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst setSkillsRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        setSkillsRedirect: action.path\r\n    })\r\n}\r\n\r\nconst fetchSkillsStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchSkillsSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        skillsData: action.skills\r\n    })\r\n}\r\n\r\nconst fetchSkillsFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst fetchSkillsRequestIdFromLocalSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_SKILLS_START: return skillsSubmitStart(state, action);\r\n        case actionTypes.SUBMIT_SKILLS_SUCCESS: return skillsSubmitSuccess(state, action);\r\n        case actionTypes.SUBMIT_SKILLS_FAIL: return skillsSubmitFail(state, action);\r\n        case actionTypes.SET_SKILLS_REDIRECT: return setSkillsRedirect(state, action);\r\n        case actionTypes.FETCH_SKILLS_START: return fetchSkillsStart(state, action);\r\n        case actionTypes.FETCH_SKILLS_SUCCESS: return fetchSkillsSuccess(state, action);\r\n        case actionTypes.FETCH_SKILLS_FAIL: return fetchSkillsFail(state, action);\r\n        case actionTypes.FETCH_SKILLS_REQUEST_ID_FROM_LOCAL_SUCCESS: return fetchSkillsRequestIdFromLocalSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading:false,\r\n    error: null,\r\n    portfolioData: null,\r\n    setPortfolioRedirect: '/chooseTask',\r\n    requestId: null\r\n}\r\n\r\nconst submitPortfolioStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst submitPortfolioSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        requestId: action.requestId\r\n    });\r\n};\r\n\r\nconst submitPortfolioFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst setPortfolioRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        setPortfolioRedirect: action.path\r\n    });\r\n}\r\n\r\nconst fetchPortfolioStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchPortfolioSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        portfolioData: action.portfolioData\r\n    });\r\n}\r\n\r\nconst fetchPortfolioFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst fetchRequestIdFromLocalSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case actionTypes.SUBMIT_PORTFOLIO_START: return submitPortfolioStart(state, action);\r\n        case actionTypes.SUBMIT_PORTFOLIO_SUCCESS: return submitPortfolioSuccess(state, action);\r\n        case actionTypes.SUBMIT_PORTFOLIO_FAIL: return submitPortfolioFail(state, action);\r\n        case actionTypes.SET_PORTFOLIO_REDIRECT: return setPortfolioRedirect(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_START: return fetchPortfolioStart(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_SUCCESS: return fetchPortfolioSuccess(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_FAIL: return fetchPortfolioFail(state, action);\r\n        case actionTypes.FETCH_PORT_REQUESTID_FROM_LOCAL_SUCCESS: return fetchRequestIdFromLocalSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    requestId: null,\r\n    setResumeRedirect: '/chooseTask',\r\n    resumeData: null\r\n}\r\n\r\nconst submitResumeStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst submitResumeSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        requestId: action.requestId\r\n    });\r\n};\r\n\r\nconst submitResumeFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst setResumeRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        path: action.path\r\n    });\r\n}\r\n\r\nconst fetchResumeStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchResumeSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        resumeData: action.resumeData\r\n    });\r\n}\r\n\r\nconst fetchResumeFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst fetchRequestIdFromLocalSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        requestId: action.requestId\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_RESUME_START: return submitResumeStart(state, action);\r\n        case actionTypes.SUBMIT_RESUME_SUCCESS: return submitResumeSuccess(state, action);\r\n        case actionTypes.SUBMIT_RESUME_FAIL: return submitResumeFail(state, action);\r\n        case actionTypes.SET_RESUME_REDIRECT: return setResumeRedirect(state, action);\r\n        case actionTypes.FETCH_RESUME_START: return fetchResumeStart(state, action);\r\n        case actionTypes.FETCH_RESUME_SUCCESS: return fetchResumeSuccess(state, action);\r\n        case actionTypes.FETCH_RESUME_FAIL: return fetchResumeFail(state, action);\r\n        case actionTypes.FETCH_RESUME_REQUEST_ID_FROM_LOCAL_SUCCESS: return fetchRequestIdFromLocalSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { put, call, delay } from 'redux-saga/effects';\r\n\r\nimport axios from 'axios'\r\n\r\nimport * as actions from '../actions/indexActions';\r\n\r\nexport function* authSaga (action) {\r\n    yield put(actions.authStart());\r\n    const authData = {\r\n        email: action.email,\r\n        password: action.password,\r\n        returnSecureToken: true\r\n    }\r\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyC8jZLrHIwbWvm6VIX9z_lB19X5GW6C7Jw';\r\n    if (!action.isLogin) {\r\n        url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyC8jZLrHIwbWvm6VIX9z_lB19X5GW6C7Jw';\r\n    }\r\n    try {\r\n        const response = yield axios.post(url, authData);\r\n        const expirationDate = yield new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n        yield localStorage.setItem('token', response.data.idToken);\r\n        yield localStorage.setItem('expirationTime', expirationDate);\r\n        yield localStorage.setItem('userId', response.data.localId);\r\n        yield put(actions.authSuccess(response.data.idToken, response.data.localId));\r\n        yield put(actions.authCheckTimeOut(response.data.expiresIn));\r\n\r\n    } catch (err) {\r\n        yield put(actions.authFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* authLogout (action) {\r\n    yield call([localStorage, 'removeItem'], 'token');\r\n    yield call([localStorage, 'removeItem'], 'expirationTime');\r\n    yield call([localStorage, 'removeItem'], 'userId');\r\n    yield call([localStorage, 'removeItem'], 'resumeRequestId');\r\n    yield call([localStorage, 'removeItem'], 'skillsRequestId');\r\n    yield call([localStorage, 'removeItem'], 'portRequestId');\r\n    yield call([localStorage, 'removeItem'], 'userRequestId');\r\n    yield put(actions.logoutSucceed());\r\n}\r\n\r\nexport function* authCheckTimeOut (action) {\r\n    yield delay(action.expirationTime * 1000);\r\n    yield put(actions.logout());\r\n}\r\n\r\nexport function* authCheckState (action) {\r\n    const token = yield localStorage.getItem('token');\r\n    if (!token) {\r\n        yield put(actions.logout());\r\n    } else {\r\n        const expirationDate = new Date(localStorage.getItem('expirationTime'));\r\n        if (expirationDate < new Date()) {\r\n            yield put(actions.logout());\r\n        } else {\r\n            const userId = yield localStorage.getItem('userId');\r\n            yield put(actions.authSuccess(token, userId));\r\n            yield put(actions.authCheckTimeOut((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n        }\r\n    }\r\n} ","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://personal-app-54349.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import { put } from 'redux-saga/effects';\r\nimport axios from '../../axios-order';\r\nimport * as actions from '../actions/indexActions';\r\n\r\nexport function* submitData (action) {\r\n    yield put(actions.submitDataStart());\r\n    const personalData = action.data;\r\n    try {\r\n        const response = yield axios.post('/personal.json?auth=' + action.token, personalData);\r\n        yield put(actions.submitDataSuccess(response.data.name));\r\n        yield localStorage.setItem('userRequestId', response.data.name);\r\n    } catch (err) {\r\n        yield put(actions.submitDataFail(err.response.data.error))\r\n    }\r\n}\r\n\r\nexport function* fetchUserSaga (action) {\r\n    yield put(actions.fetchUserStart());\r\n    const queryParms = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/personal.json' + queryParms);\r\n        let userData= {};\r\n        for (let key in response.data) {\r\n            userData= {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n        yield put(actions.fetchUserSuccess(userData));\r\n    } catch (err) {\r\n        yield put(actions.fetchUserFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* checkUserRequestIdState(action) {\r\n    const requestId = yield localStorage.getItem('userRequestId');\r\n    if(requestId !== null) {\r\n        yield put(actions.fetchUserRequestIdSuccess(requestId));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitSkillsSaga (action) {\r\n    yield put(actions.submitSkillsStart());\r\n    const skillsData = action.skillsData;\r\n    try {\r\n        const response = yield axios.post('/skills.json?auth=' + action.token, skillsData);\r\n        yield put(actions.submitSkillsSuccess(response.data.name));\r\n        yield localStorage.setItem(\"skillsRequestId\", response.data.name);\r\n    } catch (error) {\r\n        yield put(actions.submitSkillsFail(error.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchSkillsSaga (action) {\r\n    yield put(actions.fetchSkillsStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/skills.json' + queryParams);\r\n        let fetchSkills = {};\r\n        for (let key in response.data) {\r\n            fetchSkills = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n\r\n        let skillsArray = [];\r\n        for (let key in fetchSkills) {\r\n            skillsArray.push({\r\n                [key]: fetchSkills[key]\r\n            })\r\n        }\r\n\r\n        let skillsArrayArrenge = [];\r\n        for (let i = 0; i <= (skillsArray.length - 1) / 2; i++) {\r\n            skillsArrayArrenge.push({\r\n                \"skill\": fetchSkills[\"skill_\" + i],\r\n                \"rate\": fetchSkills[\"rate_\" + i],\r\n                id: \"skill_\" + i\r\n            })\r\n        }\r\n        yield put(actions.fetchSkillsSuccess(skillsArrayArrenge));\r\n    } catch (err) {\r\n        yield put (actions.fetchSkillsFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* checkSkillsRequestIdState(action) {\r\n    const requestId = localStorage.getItem('skillsRequestId');\r\n    if (requestId !== null) {\r\n        yield put (actions.fetchSkillsRequestIdFromLocalSuccess(requestId));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitPortfolio (action) {\r\n    yield put(actions.submitPortfolioStart());\r\n    const portfolioData = action.portfolioData;\r\n    try {\r\n        const response = yield axios.post('/portfolio.json?auth=' +  action.token, portfolioData);\r\n        yield put(actions.submitPortfolioSuccess(response.data.name));\r\n        yield localStorage.setItem('portRequestId', response.data.name);\r\n    } catch (err) {\r\n        yield put(actions.submitPortfolioFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchPortfolio (action) {\r\n    yield put(actions.fetchPortfolioStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/portfolio.json' + queryParams);\r\n        let fetchPorts = {};\r\n        for (let key in response.data) {\r\n            fetchPorts = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n        let portsArray = [];\r\n        for(let key in fetchPorts) {\r\n            portsArray.push({\r\n                [key]: fetchPorts[key]\r\n            })\r\n        }\r\n\r\n        let portsArrayArrange = [];\r\n        for (let i = 0; i <=  (portsArray.length - 1) / 3; i++) {\r\n            portsArrayArrange.push({\r\n                \"link\": fetchPorts[\"link_\" + i],\r\n                \"thumbnail\" : fetchPorts[\"thumbnail_\" + i],\r\n                \"title\": fetchPorts[\"title_\" + i],\r\n                id: i\r\n            });\r\n        }\r\n        yield put(actions.fetchPortfolioSuccess(portsArrayArrange));\r\n    } catch(err) {\r\n        yield put(actions.fetchPortfolioFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* checkPortfolioRequestIdState(action) {\r\n    const requestId = yield localStorage.getItem(\"portRequestId\");\r\n    if (requestId) {\r\n        yield put(actions.fetchRequestIdFromLocalSuccess(requestId));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitResume (action) {\r\n    yield put(actions.submitResumeStart());\r\n    const resumeData = action.resumeData;\r\n    try {\r\n        const response = yield axios.post('/resume.json?auth=' + action.token, resumeData);\r\n        yield put(actions.submitResumeSuccess(response.data.name));\r\n        yield localStorage.setItem('resumeRequestId', response.data.name);\r\n    } catch (err) {\r\n        yield put (actions.submitResumeFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchResume (action) {\r\n    yield put(actions.fetchResumeStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/resume.json' + queryParams);\r\n        let fetchResume = {};\r\n        for (let key in response.data) {\r\n            fetchResume = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n\r\n        let resumeArray = [];\r\n        for (let key in fetchResume) {\r\n            resumeArray.push({\r\n                [key]: fetchResume[key]\r\n            });\r\n        }\r\n\r\n        let resumeArrayArrange = [];\r\n        for (let i = 0; i <= (resumeArray.length - 1) / 6; i++) {\r\n            resumeArrayArrange.push({\r\n                \"title\": fetchResume[\"title_\" + i],\r\n                \"company\": fetchResume[\"companyName_\" + i],\r\n                \"position\": fetchResume[\"position_\" + i],\r\n                \"from\": fetchResume[\"from_\" + i],\r\n                \"to\": fetchResume[\"to_\" + i],\r\n                \"description\": fetchResume[\"description_\" + i],\r\n                id: i\r\n            });\r\n        }\r\n        yield put(actions.fetchResumeSuccess(resumeArrayArrange));\r\n    } catch (err) {\r\n        yield put(actions.fetchResumeFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* checkResumeRequestIdState(action) {\r\n    const requestId = yield localStorage.getItem('resumeRequestId');\r\n    if (requestId) {\r\n        yield put(actions.fetchResumeRequestIdFromLocalSuccess(requestId))\r\n    }\r\n}","import { takeEvery, all } from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport { authSaga, authLogout, authCheckTimeOut, authCheckState } from './authSaga';\r\nimport { submitData, fetchUserSaga, checkUserRequestIdState } from './userSaga';\r\nimport { submitSkillsSaga, fetchSkillsSaga, checkSkillsRequestIdState } from './skillsSaga';\r\nimport { submitPortfolio, fetchPortfolio, checkPortfolioRequestIdState } from './portfolioSaga';\r\nimport { submitResume, fetchResume, checkResumeRequestIdState } from './resumeSaga';\r\n\r\nexport function* watchAuth () {\r\n    yield all([\r\n        takeEvery(actionTypes.AUTH_USER, authSaga),\r\n        takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, authLogout),\r\n        takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, authCheckTimeOut),\r\n        takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckState),\r\n    ]);\r\n}\r\n\r\nexport function* watchPersonalData () {\r\n    yield takeEvery(actionTypes.SUBMIT_DATA, submitData);\r\n    yield takeEvery(actionTypes.FETCH_USER, fetchUserSaga);\r\n    yield takeEvery(actionTypes.CHECK_USER_REQUESR_ID_STATE, checkUserRequestIdState);\r\n}\r\n\r\nexport function* watchSkillsData () {\r\n    yield takeEvery(actionTypes.SUBMIT_SKILLS, submitSkillsSaga);\r\n    yield takeEvery(actionTypes.FETCH_SKILLS, fetchSkillsSaga);\r\n    yield takeEvery(actionTypes.CHECK_SKILLS_REQUEST_ID_STATE, checkSkillsRequestIdState);\r\n}\r\n\r\nexport function* watchPortfolioData () {\r\n    yield takeEvery(actionTypes.SUBMIT_PORTFOLIO, submitPortfolio);\r\n    yield takeEvery(actionTypes.FETCH_PORTFOLIO, fetchPortfolio);\r\n    yield takeEvery(actionTypes.CHECK_PORTFOLIO_REQUESTID_STATE, checkPortfolioRequestIdState);\r\n}\r\n\r\nexport function* watchResumeData () {\r\n    yield takeEvery(actionTypes.SUBMIT_RESUME, submitResume);\r\n    yield takeEvery(actionTypes.FETCH_RESUME, fetchResume);\r\n    yield takeEvery(actionTypes.CHECK_RESUME_REQUEST_ID_STATE, checkResumeRequestIdState);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport authReducer from './store/reducers/authReducer';\nimport userReducer from './store/reducers/userReducer';\nimport skillsReducer from './store/reducers/skillsReducer';\nimport portfolioReducer from './store/reducers/portfolioReducer';\nimport resumeReducer from './store/reducers/resumeReducer';\nimport { watchAuth, watchPersonalData, watchSkillsData, watchPortfolioData, watchResumeData } from './store/sagas/indexSaga';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    skills: skillsReducer,\n    port: portfolioReducer,\n    resume: resumeReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n));\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchPersonalData);\nsagaMiddleware.run(watchSkillsData);\nsagaMiddleware.run(watchPortfolioData);\nsagaMiddleware.run(watchResumeData);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/choose-task.7652002d.jpeg\";"],"sourceRoot":""}