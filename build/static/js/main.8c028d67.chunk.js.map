{"version":3,"sources":["hoc/AuxC.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","shared/Utility.js","store/actions/actionTypes.js","store/actions/authAction.js","store/actions/userAction.js","store/actions/skillsAction.js","store/actions/portfolioAction.js","store/actions/resumeActions.js","containers/auth/auth.js","components/UI/spanButton/spanButton.js","containers/getDataForms/UserData/UserData.js","containers/getDataForms/SkillsData/SkillsData.js","containers/getDataForms/ResumeData/ResumeData.js","containers/getDataForms/PortfolioData/PortfolioData.js","components/navigation/navigationItem/navigationItem.js","components/navigation/navigationItems/navigationItems.js","hoc/Layout/Layout.js","components/skills/skill/skill.js","components/skills/skills.js","components/about/about.js","containers/Home/Home.js","components/resume/resumeComponent.js","containers/resume/resume.js","components/portfolio/portfolioComponent.js","containers/portfolios/portfolio.js","containers/auth/Logout/Logout.js","containers/ChooseTask/ChooseTask.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/userReducer.js","store/reducers/skillsReducer.js","store/reducers/portfolioReducer.js","store/reducers/resumeReducer.js","store/sagas/authSaga.js","axios-order.js","store/sagas/userSaga.js","store/sagas/skillsSaga.js","store/sagas/portfolioSaga.js","store/sagas/resumeSaga.js","store/sagas/indexSaga.js","index.js","assets/choose-task.jpeg"],"names":["aux","props","children","library","add","faCamera","input","inputElement","inputClasses","UploadImage","isValid","shouldValidate","touched","push","elementType","react_default","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","AuxC","file","react_fontawesome_index_es","icon","src","alt","classes","button","buttonClasses","onClick","clicked","disabled","spinner","updateObject","oldObject","updatedProp","objectSpread","checkValidity","rule","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","AUTH_USER","AUTH_CHECK_TIMEOUT","AUTH_INITIATE_LOGOUT","AUTH_CHECK_STATE","SUBMIT_DATA","FETCH_USER","SUBMIT_SKILLS","FETCH_SKILLS","SUBMIT_PORTFOLIO","FETCH_PORTFOLIO","SUBMIT_RESUME","FETCH_RESUME","authStart","type","authSuccess","token","userId","idToken","authFail","error","authCheckTimeOut","expirationTime","actionTypes","logout","logoutSucceed","setAuthRedirect","path","submitDataStart","submitDataSuccess","id","requestId","submitDataFail","fetchUserStart","fetchUserSuccess","userData","fetchUserFail","submitSkillsStart","submitSkillsSuccess","submitSkillsFail","fetchSkills","fetchSkillsStart","fetchSkillsSuccess","skills","fetchSkillsFail","submitPortfolioStart","submitPortfolioSuccess","submitPortfolioFail","fetchPortfolioStart","fetchPortfolioSuccess","portfolioData","fetchPortfolioFail","submitResumeStart","submitResumeSuccess","submitResumeFail","fetchResumeStart","fetchResumeSuccess","resumeData","fetchResumeFail","Auth","state","inputs","email","config","placeholder","validation","valid","password","isLogin","redirect","inputChangeHandler","event","controlName","updateInputs","_this","defineProperty","target","setState","switchAuthHandler","preventDefault","prevState","onAuthRedirect","submitHandler","onAuthUser","_this2","this","formElementArray","key","form","map","formElement","Input_Input","loading","Spinner_Spinner","isAuthenticated","react_router","to","errorMessage","message","Container","Row","Col","lg","onSubmit","Button_Button","Component","connect","auth","authRedirectPath","dispatch","actions","spanButton","UserData","profile","fname","lname","jobTitle","birth","phone","bio","uploadImage","formIsValid","inputName","addProfileImage","reader","FileReader","files","fileReader","onloadend","result","readAsDataURL","onSubmitHandler","profilePic","personalData","info","onSubmitData","userRedirectPath","onUserRedirect","formInputsArray","configer","onDrop","submited","UI_spanButton_spanButton","user","data","faPlus","SkillsData","skill_0","rate_0","i","addFormHandler","_updateObject2","incI","addInput","skillsData","skillsInfo","onSubmitSkills","setSkillsRedirect","onSetSkillsRedirect","ResumeData","title_0","companyName_0","position_0","from_0","to_0","description_0","onSubmitResume","resumeRedirect","onSetResumeRedirect","resume","setResumeRedirect","PortfolioData","thumbnail_0","link_0","addThumbnailImage","updateImage","portData","onSubmitPort","portRedirect","onSetPortRedirect","formElemnt","port","setPortfolioRedirect","navigationItem","react_router_dom","link","exact","activeClassName","faUserAlt","faBriefcase","faGripHorizontal","faSignOutAlt","faCogs","navigationItems","show","navigation_navigationItem_navigationItem","Layout","showNav","navToggleHandler","reachHome","navigation_navigationItems_navigationItems","skill","style","width","rate","Skills","onFetch","skillElement","skills_skill_skill","faCalendarAlt","faAt","faPhoneVolume","About","xl","Home","onNav","about","skills_skills","faStar","faPenAlt","resumeComponent","title","company","position","from","description","Resume","resumes","resumeElements","components_resume_resumeComponent","portfolio","img","pathname","Portfolio","Ports","portElement","portfolio_portfolioComponent","thumbnail","Logout","outApp","onLogout","chooseTask","chooseTaskImage","App","onAutoLogin","routes","component","ChooseTask","hoc_Layout_Layout","Boolean","window","location","hostname","match","initialState","reducer","arguments","undefined","action","authLogout","setUserRedirectPath","fetchDataStart","fetchDataSuccess","fetchDataFail","skillsSubmitStart","skillsSubmitSuccess","skillsSubmitFail","authSaga","authCheckState","authData","url","response","expirationDate","regenerator_default","wrap","_context","prev","next","put","returnSecureToken","axios","post","sent","Date","getTime","expiresIn","localStorage","setItem","localId","t0","stop","_marked","_context2","call","_marked2","_context3","delay","_marked3","_context4","getItem","_marked4","instance","create","baseURL","submitData","fetchUserSaga","name","userSaga_marked","queryParms","get","userSaga_marked2","submitSkillsSaga","fetchSkillsSaga","skillsSaga_marked","queryParams","skillsArray","_key","skillsArrayArrenge","skillsSaga_marked2","submitPortfolio","fetchPortfolio","portfolioSaga_marked","fetchPorts","portsArray","portsArrayArrange","portfolioSaga_marked2","submitResume","fetchResume","resumeSaga_marked","_fetchResume","resumeArray","resumeArrayArrange","resumeSaga_marked2","watchAuth","watchPersonalData","watchSkillsData","watchPortfolioData","watchResumeData","all","takeEvery","indexSaga_marked","indexSaga_marked2","indexSaga_marked3","indexSaga_marked4","_context5","_marked5","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","userReducer","skillsReducer","portfolioReducer","resumeReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8c028d67.chunk.js","sourcesContent":["const aux = ( props ) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\n// import ImageUploader from 'react-images-upload';\r\nimport Aux from '../../../hoc/AuxC';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport './Input.scss';\r\n\r\nlibrary.add(faCamera);\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [\"input\"];\r\n    const UploadImage = [\"upload\"];\r\n    if ( props.isValid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(\"Invalid\");\r\n        UploadImage.push(\"Invalid\");\r\n    }\r\n    switch ( props.elementType ) {\r\n        case 'input':\r\n            inputElement = <input \r\n                                className = {inputClasses.join(' ')}\r\n                                {...props.elementConfig}\r\n                                value = {props.value}\r\n                                onChange = {props.changed}\r\n                            />\r\n            break;\r\n        case 'textarea':\r\n            inputElement = <Aux>\r\n                                <textarea \r\n                                    className = {inputClasses.join(' ')}\r\n                                    {...props.elementConfig}\r\n                                    value = {props.value}\r\n                                    onChange = {props.changed}\r\n                                />\r\n                                <div className=\"seperate\"></div>\r\n                            </Aux>\r\n            break;\r\n        case 'inputFile':\r\n            inputClasses.push(\"file\");\r\n            inputElement = <Aux>\r\n                                <div className=\"seperate\"></div>\r\n                                <input \r\n                                    className = {inputClasses.join(' ')}\r\n                                    {...props.elementConfig}\r\n                                    onChange = {props.file}\r\n                                />\r\n                                <div className={UploadImage.join(' ')}>\r\n                                    <FontAwesomeIcon icon={faCamera}/>\r\n                                    <img src={props.src} alt=\"\" className=\"img-fluid d-block mx-auto\"/>\r\n                                </div>\r\n                           </Aux>\r\n            break;\r\n        case 'select':\r\n            inputElement = <select></select>\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                                className = {inputClasses.join(' ')}\r\n                                {...props.elementConfig}\r\n                                value = {props.value}\r\n                                onChange = {props.changed}\r\n                            />\r\n    }\r\n    return (\r\n        <div className={[\"input-group\", props.classes].join(' ')}>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst button = ( props ) => {\r\n    let buttonClasses = [\"button\"];\r\n    buttonClasses.push(props.classes);\r\n    return (\r\n        <button onClick={props.clicked} className={buttonClasses.join(' ')} disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default button;\r\n","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"spinner\">\r\n                <div className=\"bounce1\"></div>\r\n                <div className=\"bounce2\"></div>\r\n                <div className=\"bounce3\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default spinner;","export const updateObject = (oldObject, updatedProp) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProp\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rule) => {\r\n    let isValid = true;\r\n    if (!rule) {\r\n        return true;\r\n    }\r\n    if (rule.required) {\r\n        isValid = value.trim() !==  '' && isValid;\r\n    }\r\n    if (rule.minLength) {\r\n        isValid = value.length >= rule.minLength && isValid;\r\n    }\r\n    if (rule.maxLength) {\r\n        isValid = value.length <= rule.maxLength && isValid\r\n    }\r\n    if (rule.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rule.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n    return isValid;\r\n}","export const AUTH_USER = 'AUTH_USER';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_INITIATE_LOGOUT = 'AUTH_INITIATE_LOGOUT';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const AUTH_CHECK_STATE = 'AUTH_CHECK_STATE';\r\nexport const SET_AUTH_REDIRECT = 'SET_AUTH_REDIRECT';\r\nexport const REACH_HOME = 'REACH_HOME';\r\nexport const OUT_APP = 'OUT_APP';\r\n\r\nexport const SUBMIT_DATA = 'SUBMIT_DATA';\r\nexport const SUBMIT_DATA_START = 'SUBMIT_DATA_START';\r\nexport const SUBMIT_DATA_SUCCESS = 'SUBMIT_DATA_SUCCESS';\r\nexport const SUBMIT_DATA_FAIL = 'SUBMIT_DATA_FAIL';\r\nexport const SET_USER_REDIRECT = 'SET_USER_REDIRECT';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const FETCH_USER_START = 'FETCH_USER_START';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\r\n\r\nexport const SUBMIT_SKILLS = 'SUBMIT_SKILLS';\r\nexport const SUBMIT_SKILLS_START = 'SUBMIT_SKILLS_START';\r\nexport const SUBMIT_SKILLS_SUCCESS = 'SUBMIT_SKILLS_SUCCESS';\r\nexport const SUBMIT_SKILLS_FAIL = 'SUBMIT_SKILLS_FAIL';\r\nexport const SET_SKILLS_REDIRECT = 'SET_SKILLS_REDIRECT';\r\nexport const FETCH_SKILLS = 'FETCH_SKILLS';\r\nexport const FETCH_SKILLS_START = 'FETCH_SKILLS_START';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\n\r\nexport const SUBMIT_PORTFOLIO = 'SUBMIT_PORTFOLIO';\r\nexport const SUBMIT_PORTFOLIO_START = 'SUBMIT_PORTFOLIO_START';\r\nexport const SUBMIT_PORTFOLIO_SUCCESS = 'SUBMIT_PORTFOLIO_SUCCESS';\r\nexport const SUBMIT_PORTFOLIO_FAIL = 'SUBMIT_PORTFOLIO_FAIL';\r\nexport const SET_PORTFOLIO_REDIRECT = 'SET_PORTFOLIO_REDIRECT';\r\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\r\nexport const FETCH_PORTFOLIO_START = 'FETCH_PORTFOLIO_START';\r\nexport const FETCH_PORTFOLIO_SUCCESS = 'FETCH_PORTFOLIO_SUCCESS';\r\nexport const FETCH_PORTFOLIO_FAIL = 'FETCH_PORTFOLIO_FAIL';\r\n\r\nexport const SUBMIT_RESUME = 'SUBMIT_RESUME';\r\nexport const SUBMIT_RESUME_START = 'SUBMIT_RESUME_START';\r\nexport const SUBMIT_RESUME_SUCCESS = 'SUBMIT_RESUME_SUCCESS';\r\nexport const SUBMIT_RESUME_FAIL = 'SUBMIT_RESUME_FAIL';\r\nexport const SET_RESUME_REDIRECT = 'SET_RESUME_REDIRECT';\r\nexport const FETCH_RESUME = 'FETCH_RESUME';\r\nexport const FETCH_RESUME_START = 'FETCH_RESUME_START';\r\nexport const FETCH_RESUME_SUCCESS = 'FETCH_RESUME_SUCCESS';\r\nexport const FETCH_RESUME_FAIL = 'FETCH_RESUME_FAIL';","import * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken : token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const authUser = (email, password, isLogin) => {\r\n    return {\r\n        type: actionTypes.AUTH_USER,\r\n        email: email,\r\n        password: password,\r\n        isLogin: isLogin\r\n    }\r\n}\r\n\r\nexport const authCheckTimeOut = (expirationTime) => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\r\n        expirationTime: expirationTime\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionTypes.AUTH_INITIATE_LOGOUT\r\n    }\r\n}\r\n\r\nexport const logoutSucceed = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_STATE\r\n    }\r\n}\r\n\r\nexport const setAuthRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const reachHome = () => {\r\n    return {\r\n        type: actionTypes.REACH_HOME\r\n    }\r\n}\r\n\r\nexport const outApp = () => {\r\n    return {\r\n        type: actionTypes.OUT_APP\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitData = (token, personalData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA,\r\n        data: personalData,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const submitDataStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_START\r\n    }\r\n}\r\n\r\nexport const submitDataSuccess = (id) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_SUCCESS,\r\n        requestId: id\r\n    }\r\n}\r\n\r\nexport const submitDataFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_DATA_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setUserRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_USER_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchUser = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchUserStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_START\r\n    }\r\n}\r\n\r\nexport const fetchUserSuccess = (userData) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_SUCCESS,\r\n        userData: userData\r\n    }\r\n}\r\n\r\nexport const fetchUserFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_FAIL,\r\n        error: error\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitSkills = (token, skillsData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS,\r\n        token: token,\r\n        skillsData: skillsData\r\n    }\r\n}\r\n\r\nexport const submitSkillsStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_START\r\n    }\r\n}\r\n\r\nexport const submitSkillsSuccess = (id) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_SUCCESS,\r\n        requestId: id\r\n      \r\n    }\r\n}\r\n\r\nexport const submitSkillsFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_SKILLS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setSkillsRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_SKILLS_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchSkills = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchSkillsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_START\r\n    }\r\n}\r\n\r\nexport const fetchSkillsSuccess = (skills) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_SUCCESS,\r\n        skills: skills\r\n    }\r\n}\r\n\r\nexport const fetchSkillsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_SKILLS_FAIL,\r\n        error: error\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitPortfolio = (token, portfolioData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO,\r\n        token: token,\r\n        portfolioData: portfolioData\r\n    }\r\n}\r\n\r\nexport const submitPortfolioStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_START\r\n    }\r\n}\r\n\r\nexport const submitPortfolioSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_SUCCESS,\r\n        requestId: requestId\r\n    }\r\n}\r\n\r\nexport const submitPortfolioFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_PORTFOLIO_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const setPortfolioRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_PORTFOLIO_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const fetchPortfolio = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_START\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioSuccess = (portfolioData) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_SUCCESS,\r\n        portfolioData: portfolioData\r\n    }\r\n}\r\n\r\nexport const fetchPortfolioFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_PORTFOLIO_FAIL,\r\n        error: error\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const submitResume = (token, resumeData) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME,\r\n        token: token,\r\n        resumeData: resumeData\r\n    };\r\n};\r\n\r\nexport const submitResumeStart = () => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_START\r\n    };\r\n};\r\n\r\nexport const submitResumeSuccess = (requestId) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_SUCCESS,\r\n        requestId: requestId\r\n    };\r\n};\r\n\r\nexport const submitResumeFail = (error) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_RESUME_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const setResumeRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_RESUME_REDIRECT,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const fetchResume = (token, userId) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const fetchResumeStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_START\r\n    }\r\n}\r\n\r\nexport const fetchResumeSuccess = (resumeData) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_SUCCESS,\r\n        resumeData: resumeData\r\n    }\r\n}\r\n\r\nexport const fetchResumeFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESUME_FAIL,\r\n        error: error\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { updateObject, checkValidity } from '../../shared/Utility';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport './auth.scss';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        inputs: {\r\n            email: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'email',\r\n                    placeholder: 'Type your email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'password',\r\n                    placeholder: 'Type a strong password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isLogin:true,\r\n        redirect: '/home'\r\n    }\r\n\r\n\r\n    inputChangeHandler = (event, controlName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [controlName]: updateObject(this.state.inputs[controlName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[controlName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        this.setState({inputs: updateInputs});\r\n    }\r\n\r\n    switchAuthHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => {\r\n            return {isLogin: !prevState.isLogin}\r\n        }, () => {\r\n            if (this.state.isLogin) {\r\n                this.setState(prevState => {\r\n                    return {redirect: prevState.redirect= '/home'}\r\n                }, () => this.props.onAuthRedirect(this.state.redirect));\r\n            }\r\n            if (!this.state.isLogin) {\r\n                this.setState(prevState => {\r\n                    return {redirect: prevState.redirect= '/chooseTask'}\r\n                }, () => this.props.onAuthRedirect(this.state.redirect))\r\n            }\r\n        });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuthUser(this.state.inputs.email.value, this.state.inputs.password.value, this.state.isLogin);\r\n    }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.inputs[key]\r\n            })\r\n        }\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.config.elementType}\r\n                elementConfig = {formElement.config.config}\r\n                value = {formElement.config.value}\r\n                isValid = {!formElement.config.valid}\r\n                touched = {formElement.config.touched}\r\n                shouldValidate = {formElement.config.validation}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if ( this.props.isAuthenticated && this.state.isLogin ) {\r\n            redirect = <Redirect to = '/home'/>\r\n        }\r\n\r\n        if ( this.props.isAuthenticated && !this.state.isLogin ) {\r\n            redirect = <Redirect to = '/chooseTask'/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"auth\">\r\n                {redirect}\r\n                <Container>\r\n                    <Row className=\"justify-content-center align-items-center\">\r\n                        <Col lg = '6' className=\"content\">\r\n                            {spinner}\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <h2>{this.state.isLogin? \"Log in to your profile\" : \"Create Your own profile\"} </h2>\r\n                                {errorMessage}\r\n                                {form}\r\n                                <Button>{this.state.isLogin? \"Log in\": \"Sign up\"}</Button>\r\n                            </form>\r\n                            <div className=\"seperate\"></div>\r\n                            <p>\r\n                                    {\r\n                                        this.state.isLogin? \r\n                                           \"You don't have an account?\"\r\n                                           :\r\n                                           \"Already have an account?\"\r\n                                    }\r\n                            </p>\r\n                            <Button classes=\"switch\" clicked = {this.switchAuthHandler}>\r\n                                {this.state.isLogin? \"Sign up\": \"Log in\"}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n        isAuthenticated: state.auth.token !== null,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuthUser: (email, password, isLogin) => dispatch(actions.authUser(email, password, isLogin)),\r\n        onAuthRedirect: (path) => dispatch(actions.setAuthRedirect(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport './spanButton.scss';\r\n\r\nconst spanButton = () => (\r\n    <span className=\"span-button\">\r\n        Next\r\n    </span>\r\n);\r\n\r\nexport default spanButton;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport '../formsData.scss';\r\n\r\nclass UserData extends Component {\r\n    state = {\r\n        inputs : {\r\n            profile : {\r\n                elementType: 'inputFile',\r\n                config: {\r\n                    type: 'file',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            },\r\n            fname : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your first name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            lname : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your last name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            jobTitle : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your job title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true, \r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            birth : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'date',\r\n                    placeholder: 'Date of birth'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            phone : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your phone number'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 11,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            email : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'email',\r\n                    placeholder: 'Type your email address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            bio : {\r\n                elementType: 'textarea',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Tell us about yourself'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-12'\r\n            },\r\n        },\r\n        uploadImage: '',\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.userRedirectPath !== '/skillsData') {\r\n            this.props.onUserRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid: formIsValid});\r\n    }\r\n\r\n    addProfileImage = (event) => {\r\n        event.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        const fileReader = updateObject(this.state.inputs, {\r\n            \"profile\" : {\r\n                ...this.state.inputs.profile,\r\n                touched:true,\r\n                valid:true\r\n            }\r\n        })\r\n        reader.onloadend = () => {\r\n            this.setState({uploadImage: reader.result, inputs:fileReader})\r\n        };\r\n        if ( event.target.files[0] ) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const userData = {};\r\n        for ( let key in this.state.inputs) {\r\n            userData[key] = this.state.inputs[key].value\r\n        }\r\n        const profilePic = this.state.uploadImage;\r\n        const personalData = {\r\n            info: {\r\n                ...userData,\r\n                \"profile\": profilePic\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitData(this.props.token, personalData);\r\n    }\r\n\r\n    render () {\r\n        const formInputsArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formInputsArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formInputsArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                value = {formElement.configer.value}\r\n                elementType = {formElement.configer.elementType}\r\n                touched = {formElement.configer.touched}\r\n                isValid = {!formElement.configer.valid}\r\n                shouldValidate = {formElement.configer.validation}\r\n                elementConfig = {formElement.configer.config}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n                classes = {formElement.configer.classes}\r\n                onDrop = {this.onDrop}\r\n                file = {(event) => this.addProfileImage(event)}\r\n                src = {this.state.uploadImage}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.submited) {\r\n            redirect = <Redirect to = {this.props.userRedirectPath} />\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n\r\n        return (\r\n            <section className=\"data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.onSubmitHandler}>\r\n                        {spinner}\r\n                        <h2>Start creating your profile</h2>\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.user.loading,\r\n        userRedirectPath: state.user.userRedirectPath,\r\n        submited: state.user.requestId !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitData: (token, data) => dispatch(actions.submitData(token, data)),\r\n        onUserRedirect: () => dispatch(actions.setUserRedirectPath('/skillsData'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserData);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport '../formsData.scss';\r\n\r\nlibrary.add(faPlus);\r\n\r\nclass SkillsData extends Component {\r\n    state = {\r\n        inputs: {\r\n            skill_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type your skill'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            rate_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Type this skill rate'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    maxLength: 3,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.setSkillsRedirect !== '/portfolioData') {\r\n            this.props.onSetSkillsRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid: formIsValid});\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"skill_\" + i] : {\r\n                ...this.state.inputs[\"skill_0\"],\r\n                value: '',\r\n                touched: false,\r\n                valid: false\r\n            },\r\n            [\"rate_\" + i] : {\r\n                ...this.state.inputs[\"rate_0\"],\r\n                value: '',\r\n                touched: false,\r\n                valid: false\r\n            },\r\n        });\r\n        this.setState({inputs:addInput, i:incI.i, formIsValid: false});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const skillsData = {};\r\n        for (let key in this.state.inputs) {\r\n            skillsData[key] = this.state.inputs[key].value\r\n        }\r\n        const skillsInfo = {\r\n            info: {\r\n                ...skillsData\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitSkills(this.props.token, skillsInfo);\r\n    }\r\n\r\n    render () {\r\n        const formInputsArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formInputsArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formInputsArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.configer.elementType}\r\n                value = {formElement.configer.value}\r\n                touched = {formElement.configer.touched}\r\n                elementConfig = {formElement.configer.config}\r\n                classes = {formElement.configer.classes}\r\n                shouldValidate = {formElement.configer.validation}\r\n                isValid = {!formElement.configer.valid}\r\n                changed = {(event) => this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId) {\r\n            redirect = <Redirect to = {this.props.setSkillsRedirect}/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"skill-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start Adding your Skills</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add Another skill?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        token: state.auth.token,\r\n        loading: state.skills.loading,\r\n        requestId: state.skills.requestId !== null,\r\n        setSkillsRedirect: state.skills.setSkillsRedirect,\r\n        error: state.skills.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitSkills: (token, data) => dispatch(actions.submitSkills(token, data)),\r\n        onSetSkillsRedirect: () => dispatch(actions.setSkillsRedirect('/portfolioData'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillsData);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport '../formsData.scss'; \r\n\r\nlibrary.add(faPlus);\r\n\r\nclass ResumeData extends Component {\r\n    state = {\r\n        inputs: {\r\n            title_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            companyName_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Company name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            position_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'What is your position in this company?'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            },\r\n            from_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'from...ex(2016, 2018...etc)'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength:4,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            to_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'to...ex(2016, 2018...etc)'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength:4,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            description_0 : {\r\n                elementType: 'textarea',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Description...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-12'\r\n            }\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.resumeRedirect !== '/home') {\r\n            this.props.onSetResumeRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName] : updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs:updateInputs, formIsValid:formIsValid})\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"title_\" + i] : {\r\n                ...this.state.inputs[\"title_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"companyName_\" + i] : {\r\n                ...this.state.inputs[\"companyName_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"position_\" + i] : {\r\n                ...this.state.inputs[\"position_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"from_\" + i] : {\r\n                ...this.state.inputs[\"from_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"to_\" + i] : {\r\n                ...this.state.inputs[\"to_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            },\r\n            [\"description_\" + i] : {\r\n                ...this.state.inputs[\"description_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched:false\r\n            }\r\n        });\r\n        this.setState({inputs:addInput, i: incI.i, formIsValid: false})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const data = {};\r\n        for (let key in this.state.inputs) {\r\n            data[key] = this.state.inputs[key].value\r\n        }\r\n        const resumeData = {\r\n            info: {\r\n                ...data\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.props.onSubmitResume(this.props.token, resumeData);\r\n    }\r\n\r\n    render () {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key = {formElement.id}\r\n                elementType = {formElement.configer.elementType}\r\n                value = {formElement.configer.value}\r\n                touched = {formElement.configer.touched}\r\n                isValid = {!formElement.configer.valid}\r\n                shouldValidate = {formElement.configer.validation}\r\n                classes = {formElement.configer.classes}\r\n                elementConfig = {formElement.configer.config}\r\n                changed = {(event) =>this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId !== null) {\r\n            redirect = <Redirect to = {this.props.resumeRedirect} />\r\n        }\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"resume-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start adding your career history</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add More information?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.resume.loading,\r\n        requestId: state.resume.requestId,\r\n        resumeRedirect: state.resume.setResumeRedirect,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        error: state.resume.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitResume: (token, data) => dispatch(actions.submitResume(token, data)),\r\n        onSetResumeRedirect: () => dispatch(actions.setResumeRedirect('/home'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResumeData);","import React, { Component } from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../../shared/Utility';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SpanButton from '../../../components/UI/spanButton/spanButton';\r\nimport * as actions from '../../../store/actions/indexActions';\r\nimport '../formsData.scss';\r\n\r\nlibrary.add(faPlus);\r\n\r\nclass PortfolioData extends Component {\r\n    state = {\r\n        inputs: {\r\n            thumbnail_0: {\r\n                elementType: 'inputFile',\r\n                config: {\r\n                    type: 'file'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                classes: 'col-lg-12',\r\n                uploadImage: ''\r\n            },\r\n            title_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            },\r\n            link_0 : {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Put the link to this item'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                classes: 'col-lg-6'\r\n            }\r\n        },\r\n        i: 1,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.portRedirect !== '/resumeData') {\r\n            this.props.onSetPortRedirect();\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputName) => {\r\n        const updateInputs = updateObject(this.state.inputs, {\r\n            [inputName]: updateObject(this.state.inputs[inputName], {\r\n                value: event.target.value,\r\n                touched: true,\r\n                valid: checkValidity(event.target.value, this.state.inputs[inputName].validation)\r\n            })\r\n        });\r\n        let formIsValid = true;\r\n        for (let input in updateInputs) {\r\n            formIsValid = updateInputs[input].valid && formIsValid;\r\n        }\r\n        this.setState({inputs: updateInputs, formIsValid:formIsValid});\r\n    }\r\n\r\n    addFormHandler = () => {\r\n        let i = this.state.i;\r\n        const incI = updateObject(this.state, {\r\n            i: this.state.i + 1\r\n        });\r\n        const addInput = updateObject(this.state.inputs, {\r\n            [\"thumbnail_\" + i]: {\r\n                ...this.state.inputs[\"thumbnail_0\"],\r\n                value: '',\r\n                valid: true,\r\n                touched: false,\r\n                uploadImage: ''\r\n            },\r\n            [\"title_\" + i]: {\r\n                ...this.state.inputs[\"title_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            [\"link_\" + i]: {\r\n                ...this.state.inputs[\"link_0\"],\r\n                value: '',\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        });\r\n        this.setState({inputs:addInput, i: incI.i, formIsValid:false})\r\n    }\r\n\r\n    addThumbnailImage = (event, inputName) => {\r\n        event.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        // console.log(event.target.value);\r\n        reader.onloadend = () => {\r\n            const updateImage = updateObject(this.state.inputs, {\r\n                [inputName]: updateObject(this.state.inputs[inputName], {\r\n                    uploadImage: reader.result,\r\n                    touched:true,\r\n                    valid:true\r\n                })\r\n            });\r\n            \r\n            this.setState({inputs:updateImage})\r\n        };\r\n        if ( event.target.files[0] ) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const data = {};\r\n        for (let key in this.state.inputs) {\r\n            data[key] = this.state.inputs[key].uploadImage;\r\n            if (this.state.inputs[key].uploadImage == null) {\r\n                data[key] = this.state.inputs[key].value;\r\n            }\r\n        }\r\n        const portData = {\r\n            info: {\r\n                ...data\r\n            },\r\n            userId: this.props.userId\r\n        };\r\n        this.props.onSubmitPort(this.props.token, portData);\r\n    }\r\n\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.inputs) {\r\n            formElementArray.push({\r\n                id: key,\r\n                configer: this.state.inputs[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementArray.map(formElemnt => (\r\n            <Input \r\n                key = {formElemnt.id}\r\n                value = {formElemnt.configer.value}\r\n                elementType = {formElemnt.configer.elementType}\r\n                isValid = {!formElemnt.configer.valid}\r\n                touched = {formElemnt.configer.touched}\r\n                classes = {formElemnt.configer.classes}\r\n                shouldValidate = {formElemnt.configer.validation}\r\n                elementConfig = {formElemnt.configer.config}\r\n                changed = {(event) => this.inputChangeHandler(event, formElemnt.id)}\r\n                file = {(event) => this.addThumbnailImage(event, formElemnt.id)}\r\n                src = {formElemnt.configer.uploadImage}\r\n            />\r\n        ));\r\n\r\n        let spinner = null;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        let redirect = null;\r\n        if (this.props.requestId) {\r\n            redirect = <Redirect to = {this.props.portRedirect} />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className=\"err\">{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let button = <SpanButton/>;\r\n\r\n        if (this.state.formIsValid) {\r\n            button = <Button classes=\"next\">Next</Button>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"port-data text-center\">\r\n                {redirect}\r\n                <Container>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        {spinner}\r\n                        <h2>Start adding your works</h2>\r\n                        {errorMessage}\r\n                        <Row>\r\n                            {form}\r\n                            {button}\r\n                        </Row>\r\n                    </form>\r\n                    <Button classes=\"add\" clicked= {this.addFormHandler}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <span>Add More works?</span>\r\n                    </Button>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.port.loading,\r\n        requestId: state.port.requestId !== null,\r\n        portRedirect: state.port.setPortfolioRedirect,\r\n        userId: state.auth.userId,\r\n        token: state.auth.token,\r\n        error: state.port.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitPort: (token, data) => dispatch(actions.submitPortfolio(token, data)),\r\n        onSetPortRedirect: () => dispatch(actions.setPortfolioRedirect('/resumeData'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortfolioData);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './navigationItem.scss';\r\n\r\nconst navigationItem = ( props ) => (\r\n    <li className = \"navItem\">\r\n        <NavLink to = {props.link} exact = {props.exact} activeClassName = \"active\">{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from '../navigationItem/navigationItem';\r\nimport './navigationItems.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserAlt, faBriefcase, faGripHorizontal, faSignOutAlt, faCogs } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faUserAlt, faBriefcase, faGripHorizontal, faSignOutAlt, faCogs);\r\n\r\nconst navigationItems = ( props ) => {\r\n    let classes = \"closed\";\r\n    if (props.show) {\r\n        classes = \"opened\"\r\n    }\r\n    return (<nav className = {classes}>\r\n                <ul className=\"list-unstyled\">\r\n                    <NavigationItem link = \"/home\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faUserAlt}/>\r\n                        <span>My Profile</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/portfolio\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faBriefcase} />\r\n                        <span>My Portfolio</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/resume\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faGripHorizontal} />\r\n                        <span>My Resume</span>\r\n                    </NavigationItem>\r\n                    <NavigationItem link = \"/logout\" exact = {true}>\r\n                        <FontAwesomeIcon icon = {faSignOutAlt} />\r\n                        <span>Log out</span>\r\n                    </NavigationItem>\r\n                </ul>\r\n                <span className=\"option\" onClick = {props.clicked}>\r\n                    <FontAwesomeIcon icon = {faCogs} />\r\n                </span>\r\n        </nav>);\r\n};\r\n\r\nexport default navigationItems;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../AuxC';\r\nimport NavigationItems from '../../components/navigation/navigationItems/navigationItems';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showNav: false\r\n    }\r\n\r\n\r\n    navToggleHandler = () => {\r\n        this.setState(prevState => {\r\n            return {showNav: !prevState.showNav}\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                {this.props.reachHome? <NavigationItems show = {this.state.showNav} clicked = {this.navToggleHandler}/>: null}\r\n                {this.props.children}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reachHome: state.auth.reachHome\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport './skill.scss';\r\n\r\nconst skill = ( props ) => (\r\n    <div className=\"skill\">\r\n        <div className=\"rate\" style={{\r\n            width: props.rate\r\n        }}>\r\n            <p>{props.skill}</p>\r\n            <span>{props.rate}</span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default skill;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport Skill from './skill/skill';\r\n\r\nclass Skills extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let skills = null;\r\n        \r\n        if (this.props.loading) {\r\n            skills = <Spinner />;\r\n        }\r\n       \r\n        if (this.props.skillsData !== null && !this.props.loading) {\r\n            skills = this.props.skillsData.map(skillElement => (\r\n                <Skill key = {skillElement.id} skill = {skillElement.skill} rate = {skillElement.rate + \"%\"}/>\r\n            ))\r\n        }\r\n        \r\n        return (\r\n            <div className=\"skills\">\r\n                <h3>Skills</h3>\r\n                {skills}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.skills.loading,\r\n        skillsData: state.skills.skillsData,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchSkills(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Skills);","import React, { Component } from 'react';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/AuxC'\r\nimport { Col } from 'reactstrap';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faAt, faPhoneVolume } from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nlibrary.add(faCalendarAlt, faAt, faPhoneVolume);\r\n\r\nclass About extends Component {\r\n    componentDidMount () {\r\n        if (this.props.token !== null && this.props.userId !== null) {\r\n            this.props.onFetch(this.props.token, this.props.userId);\r\n        }\r\n        // this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n\r\n        let userData = null;\r\n\r\n        if (this.props.loading) {\r\n            userData = <Spinner />\r\n        }\r\n\r\n        if (this.props.data !== null && !this.props.loading) {\r\n            userData = (\r\n                <Aux>\r\n                    <Col xl = '4' lg = '6'>\r\n                    <div className=\"profile\">\r\n                        <img src = {this.props.data.profile} alt=\"Profile: usually contains a person\" className=\"d-block mx-auto img-fluid\"/>\r\n                    </div>\r\n                    </Col>\r\n                    <Col xl = '8' lg = '6'>\r\n                        <h2>Hello, I'm {this.props.data.fname} {this.props.data.lname}</h2>\r\n                        <p className=\"title\">I'm a {this.props.data.jobTitle}</p>\r\n                        <p className=\"desc\">{this.props.data.bio}</p>\r\n                        <ul className=\"list-unstyled info\">\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faCalendarAlt} /></span>\r\n                                <p><span>Date of birth:</span> {this.props.data.birth}</p>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faAt} /></span>\r\n                                <p><span>Email:</span> {this.props.data.email}</p>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"text-center mark\"><FontAwesomeIcon icon = {faPhoneVolume} /></span>\r\n                                <p><span>Phone:</span> {this.props.data.phone}</p>\r\n                            </li>\r\n                        </ul>\r\n                    </Col>\r\n                </Aux>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {userData}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        data: state.user.data,\r\n        loading: state.user.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchUser(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport './Home.scss';\r\nimport Skills from '../../components/skills/skills';\r\nimport About from '../../components/about/about';\r\n\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.onNav();\r\n        this.props.onAuthRedirect('/home');\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <section className=\"home\">\r\n                <Row>\r\n                    <About />\r\n                    <Col lg='12'>\r\n                        <Skills />\r\n                    </Col>\r\n                </Row>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchSkills(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome()),\r\n        onAuthRedirect: (path) => dispatch(actions.setAuthRedirect(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\r\nimport Aux from '../../hoc/AuxC';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faCalendarAlt, faPenAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport './resumeComponent.scss';\r\n\r\nlibrary.add(faStar, faCalendarAlt, faPenAlt);\r\n\r\nconst resumeComponent = ( props ) => (\r\n    <Aux>\r\n        <div className = \"resume-box col-xl-6 col-lg-12\">\r\n            <div className = \"title\"><h3>{props.title} at {props.company}</h3></div>\r\n                <div className = \"resume-content\">\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faStar} />\r\n                            </span>\r\n                                \r\n                            <p>\r\n                                <span className = \"info-title\">Position: </span>\r\n                                {props.position}\r\n                            </p>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faCalendarAlt} />\r\n                            </span>\r\n                            <p><span className = \"info-title\">from</span> <span className=\"date\">{props.from}</span> <span className = \"info-title\">to</span> <span className=\"date\">{props.to}</span></p>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className = \"icon\">\r\n                                <FontAwesomeIcon icon = {faPenAlt} />\r\n                            </span>\r\n                            <p>{props.description}</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {/*resume-content*/}\r\n        </div>\r\n        {/* resume-box */}\r\n    </Aux>\r\n);\r\n\r\nexport default resumeComponent;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { Container, Row } from 'reactstrap';\r\nimport ResumeComponent from '../../components/resume/resumeComponent';\r\nimport './resume.scss';\r\n\r\nclass Resume extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onNav();\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let resumes = null;\r\n\r\n        if (this.props.loading) {\r\n            resumes = <Spinner />\r\n        }\r\n\r\n        if (this.props.resumeData !== null && !this.props.loading) {\r\n            resumes = this.props.resumeData.map(resumeElements => (\r\n                <ResumeComponent\r\n                    key = {resumeElements.id}\r\n                    title = {resumeElements.title}\r\n                    company = {resumeElements.company}\r\n                    position = {resumeElements.position}\r\n                    from = {resumeElements.from}\r\n                    to = {resumeElements.to}\r\n                    description = {resumeElements.description}\r\n                 />\r\n            ));\r\n        }\r\n\r\n        return (\r\n            <section className = \"resume\">\r\n                <h2 className = \"text-center\">My career history</h2>\r\n                <Container>\r\n                    <Row>\r\n                        {resumes}\r\n                    </Row>\r\n                </Container>\r\n                \r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.resume.loading,\r\n        resumeData: state.resume.resumeData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchResume(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps ,mapDispatchToProps)(Resume);","import React from 'react';\r\nimport Aux from '../../hoc/AuxC';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './portfolioComponent.scss';\r\n\r\nconst portfolio = ( props ) => (\r\n    <Aux>\r\n        <div className = \"col-xl-4 col-lg-6\">\r\n            <div className = \"port-container\">\r\n                <img src = {props.img} className = \"img-fluid d-block mx-auto\" alt = \"Portfolio: may contains special works\"/>\r\n                <div className = \"overlay title\">\r\n                    <h3>{props.title}</h3>\r\n                </div>\r\n                <div className = \"overlay link\">\r\n                    <Link target=\"_blank\" to = {{\r\n                        pathname: props.link\r\n                    }}>view</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\nexport default portfolio;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PortfolioComponent from '../../components/portfolio/portfolioComponent';\r\nimport * as actions from '../../store/actions/indexActions';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport './portfolio.scss';\r\n\r\nclass Portfolio extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onNav();\r\n        this.props.onFetch(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let Ports = null;\r\n\r\n        if (this.props.loading) {\r\n            Ports = <Spinner />\r\n        }\r\n        if (this.props.portfolioData !== null && !this.props.loading) {\r\n            Ports = this.props.portfolioData.map(portElement => (\r\n                <PortfolioComponent \r\n                    key = {portElement.id}\r\n                    title = {portElement.title}\r\n                    img = {portElement.thumbnail}\r\n                    link = {portElement.link}\r\n                />\r\n            ))\r\n        }\r\n\r\n        return (\r\n            <section className = \"portfolio\">\r\n                <h2 className = \"text-center\">My Works</h2>\r\n                <Container>\r\n                    <Row>\r\n                        {Ports}\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.port.loading,\r\n        portfolioData: state.port.portfolioData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token, userId) => dispatch(actions.fetchPortfolio(token, userId)),\r\n        onNav: () => dispatch(actions.reachHome())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Portfolio);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/indexActions';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.outApp();\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to = \"/\" />\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout()),\r\n        outApp: () => dispatch(actions.outApp())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\r\nimport NavigationItem from '../../components/navigation/navigationItem/navigationItem';\r\nimport chooseTaskImage from '../../assets/choose-task.jpeg';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport \"./ChooseTask.scss\";\r\n\r\nconst chooseTask = () => {\r\n    return  (\r\n        <section className=\"chooseTask\">\r\n            <div className=\"container\">\r\n                <div className=\"justify-content-center align-items-center row\">\r\n                    <div className=\"col-lg-9 \">\r\n                        <div className=\"content row\">\r\n                            <div className=\"col-lg-6 sp\">\r\n                                <div className=\"pic\">\r\n                                    <div className=\"pic\">\r\n                                        <img src = {chooseTaskImage} className=\"img-fluid d-block mx-auto\" alt=\"contains peaple looking at a computer\"/>\r\n                                        <div className=\"blur\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 sp\">\r\n                                <nav className=\"chooseTaskNav\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <NavigationItem link = \"/data\" exact = {true}>Start adding your personal data</NavigationItem>\r\n                                        <NavigationItem link = \"/skillsData\" exact = {true}>Start adding your Skills</NavigationItem>\r\n                                        <NavigationItem link = \"/resumeData\" exact = {true}>Start adding your career history</NavigationItem>\r\n                                        <NavigationItem link = \"/portfolioData\" exact = {true}>Start adding your works</NavigationItem>\r\n                                        <NavigationItem link = \"/home\" exact = {true}>\r\n                                            <Button classes=\"tasksButton\">Skip tasks to your profile</Button>\r\n                                        </NavigationItem>\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div> {/*content*/ }\r\n                    </div> {/*col-lg-9*/ }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default chooseTask;","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Auth from './containers/auth/auth';\nimport UserData from './containers/getDataForms/UserData/UserData';\nimport SkillsData from './containers/getDataForms/SkillsData/SkillsData';\nimport ResumeData from './containers/getDataForms/ResumeData/ResumeData';\nimport PortfolioData from './containers/getDataForms/PortfolioData/PortfolioData';\nimport Layout from './hoc/Layout/Layout';\nimport Home from './containers/Home/Home';\nimport Resume from './containers/resume/resume';\nimport Portfolio from './containers/portfolios/portfolio';\nimport Logout from './containers/auth/Logout/Logout';\nimport ChooseTask from './containers/ChooseTask/ChooseTask';\nimport * as actions from './store/actions/indexActions';\nimport './App.scss';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onAutoLogin();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path = '/' exact component = {Auth}/>\n        <Route path = '/logout' exact component = {Logout}/>\n      </Switch>\n    );\n\n    if (this.props.token) {\n      routes = (\n        <Switch>\n          <Route path = '/chooseTask' exact component = {ChooseTask}/>\n          <Route path = '/data' component = {UserData}/>\n          <Route path = '/skillsData' component = {SkillsData}/>\n          <Route path = '/resumeData' component = {ResumeData}/>\n          <Route path = '/portfolioData' component = {PortfolioData}/>\n          <Route path = '/home' component = {Home}/>\n          <Route path = '/resume' exact component = {Resume}/>\n          <Route path = '/portfolio' exact component = {Portfolio}/>\n          <Route path = '/logout' exact component = {Logout}/>\n          <Redirect to= {this.props.redirect} />\n        </Switch>\n      );\n    }\n    return (\n      <div>\n        <Layout>\n            {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token !== null,\n    redirect: state.auth.authRedirectPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoLogin: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/home',\r\n    reachHome: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading:false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n}\r\n\r\nconst setAuthRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath: action.path\r\n    });\r\n}\r\n\r\nconst reachHome = (state, action) => {\r\n    return updateObject(state, {\r\n        reachHome: true\r\n    });\r\n}\r\n\r\nconst outApp = (state, action) => {\r\n    return updateObject(state, {\r\n        reachHome: false\r\n    })\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT: return setAuthRedirect(state, action);\r\n        case actionTypes.REACH_HOME: return reachHome(state, action);\r\n        case actionTypes.OUT_APP: return outApp(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    userRedirectPath: '/skillsData',\r\n    data: null,\r\n    requestId: null\r\n}\r\n\r\nconst submitDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    })\r\n}\r\n\r\nconst submitDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null,\r\n        requestId: action.requestId\r\n    });\r\n}\r\n\r\nconst submitDataFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst setUserRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        userRedirectPath: action.path\r\n    });\r\n}\r\n\r\nconst fetchDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        data: action.userData,\r\n        loading:false,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchDataFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_DATA_START: return submitDataStart(state, action);\r\n        case actionTypes.SUBMIT_DATA_SUCCESS: return submitDataSuccess(state, action);\r\n        case actionTypes.SUBMIT_DATA_FAIL: return submitDataFail(state, action);\r\n        case actionTypes.SET_USER_REDIRECT: return setUserRedirectPath(state, action);\r\n        case actionTypes.FETCH_USER_START: return fetchDataStart(state, action);\r\n        case actionTypes.FETCH_USER_SUCCESS: return fetchDataSuccess(state, action);\r\n        case actionTypes.FETCH_USER_FAIL: return fetchDataFail(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading:false,\r\n    error: null,\r\n    skillsData: null,\r\n    requestId: null,\r\n    setSkillsRedirect: '/portfolioData'\r\n}\r\n\r\nconst skillsSubmitStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst skillsSubmitFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst skillsSubmitSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null,\r\n        requestId: action.requestId\r\n    })\r\n}\r\n\r\nconst setSkillsRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        setSkillsRedirect: action.path\r\n    })\r\n}\r\n\r\nconst fetchSkillsStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchSkillsSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        skillsData: action.skills\r\n    })\r\n}\r\n\r\nconst fetchSkillsFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_SKILLS_START: return skillsSubmitStart(state, action);\r\n        case actionTypes.SUBMIT_SKILLS_SUCCESS: return skillsSubmitSuccess(state, action);\r\n        case actionTypes.SUBMIT_SKILLS_FAIL: return skillsSubmitFail(state, action);\r\n        case actionTypes.SET_SKILLS_REDIRECT: return setSkillsRedirect(state, action);\r\n        case actionTypes.FETCH_SKILLS_START: return fetchSkillsStart(state, action);\r\n        case actionTypes.FETCH_SKILLS_SUCCESS: return fetchSkillsSuccess(state, action);\r\n        case actionTypes.FETCH_SKILLS_FAIL: return fetchSkillsFail(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading:false,\r\n    error: null,\r\n    portfolioData: null,\r\n    setPortfolioRedirect: '/resumeData',\r\n    requestId: null\r\n}\r\n\r\nconst submitPortfolioStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst submitPortfolioSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        requestId: action.requestId\r\n    });\r\n};\r\n\r\nconst submitPortfolioFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading:false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst setPortfolioRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        setPortfolioRedirect: action.path\r\n    });\r\n}\r\n\r\nconst fetchPortfolioStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchPortfolioSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        portfolioData: action.portfolioData\r\n    });\r\n}\r\n\r\nconst fetchPortfolioFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case actionTypes.SUBMIT_PORTFOLIO_START: return submitPortfolioStart(state, action);\r\n        case actionTypes.SUBMIT_PORTFOLIO_SUCCESS: return submitPortfolioSuccess(state, action);\r\n        case actionTypes.SUBMIT_PORTFOLIO_FAIL: return submitPortfolioFail(state, action);\r\n        case actionTypes.SET_PORTFOLIO_REDIRECT: return setPortfolioRedirect(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_START: return fetchPortfolioStart(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_SUCCESS: return fetchPortfolioSuccess(state, action);\r\n        case actionTypes.FETCH_PORTFOLIO_FAIL: return fetchPortfolioFail(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/Utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    requestId: null,\r\n    setResumeRedirect: '/home',\r\n    resumeData: null\r\n}\r\n\r\nconst submitResumeStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst submitResumeSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        requestId: action.requestId\r\n    });\r\n};\r\n\r\nconst submitResumeFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst setResumeRedirect = (state, action) => {\r\n    return updateObject(state, {\r\n        path: action.path\r\n    });\r\n}\r\n\r\nconst fetchResumeStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true,\r\n        error: null\r\n    });\r\n}\r\n\r\nconst fetchResumeSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        resumeData: action.resumeData\r\n    });\r\n}\r\n\r\nconst fetchResumeFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_RESUME_START: return submitResumeStart(state, action);\r\n        case actionTypes.SUBMIT_RESUME_SUCCESS: return submitResumeSuccess(state, action);\r\n        case actionTypes.SUBMIT_RESUME_FAIL: return submitResumeFail(state, action);\r\n        case actionTypes.SET_RESUME_REDIRECT: return setResumeRedirect(state, action);\r\n        case actionTypes.FETCH_RESUME_START: return fetchResumeStart(state, action);\r\n        case actionTypes.FETCH_RESUME_SUCCESS: return fetchResumeSuccess(state, action);\r\n        case actionTypes.FETCH_RESUME_FAIL: return fetchResumeFail(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { put, call, delay } from 'redux-saga/effects';\r\n\r\nimport axios from 'axios'\r\n\r\nimport * as actions from '../actions/indexActions';\r\n\r\nexport function* authSaga (action) {\r\n    yield put(actions.authStart());\r\n    const authData = {\r\n        email: action.email,\r\n        password: action.password,\r\n        returnSecureToken: true\r\n    }\r\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyC8jZLrHIwbWvm6VIX9z_lB19X5GW6C7Jw';\r\n    if (!action.isLogin) {\r\n        url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyC8jZLrHIwbWvm6VIX9z_lB19X5GW6C7Jw';\r\n    }\r\n    try {\r\n        const response = yield axios.post(url, authData);\r\n        const expirationDate = yield new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n        yield localStorage.setItem('token', response.data.idToken);\r\n        yield localStorage.setItem('expirationTime', expirationDate);\r\n        yield localStorage.setItem('userId', response.data.localId);\r\n        yield put(actions.authSuccess(response.data.idToken, response.data.localId));\r\n        yield put(actions.authCheckTimeOut(response.data.expiresIn));\r\n\r\n    } catch (err) {\r\n        yield put(actions.authFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* authLogout (action) {\r\n    yield call([localStorage, 'removeItem'], 'token');\r\n    yield call([localStorage, 'removeItem'], 'expirationTime');\r\n    yield call([localStorage, 'removeItem'], 'userId');\r\n    yield put(actions.logoutSucceed());\r\n}\r\n\r\nexport function* authCheckTimeOut (action) {\r\n    yield delay(action.expirationTime * 1000);\r\n    yield put(actions.logout());\r\n}\r\n\r\nexport function* authCheckState (action) {\r\n    const token = yield localStorage.getItem('token');\r\n    if (!token) {\r\n        yield put(actions.logout());\r\n    } else {\r\n        const expirationDate = new Date(localStorage.getItem('expirationTime'));\r\n        if (expirationDate < new Date()) {\r\n            yield put(actions.logout());\r\n        } else {\r\n            const userId = yield localStorage.getItem('userId');\r\n            yield put(actions.authSuccess(token, userId));\r\n            yield put(actions.authCheckTimeOut((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n        }\r\n    }\r\n} ","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://personal-app-54349.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import { put } from 'redux-saga/effects';\r\nimport axios from '../../axios-order';\r\nimport * as actions from '../actions/indexActions';\r\n\r\nexport function* submitData (action) {\r\n    yield put(actions.submitDataStart());\r\n    const personalData = action.data;\r\n    try {\r\n        const response = yield axios.post('/personal.json?auth=' + action.token, personalData);\r\n        yield put(actions.submitDataSuccess(response.data.name));\r\n    } catch (err) {\r\n        yield put(actions.submitDataFail(err.response.data.error))\r\n    }\r\n}\r\n\r\nexport function* fetchUserSaga (action) {\r\n    yield put(actions.fetchUserStart());\r\n    const queryParms = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/personal.json' + queryParms);\r\n        let userData= {};\r\n        for (let key in response.data) {\r\n            userData= {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n        yield put(actions.fetchUserSuccess(userData));\r\n    } catch (err) {\r\n        yield put(actions.fetchUserFail(err.response.data.error));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitSkillsSaga (action) {\r\n    yield put(actions.submitSkillsStart());\r\n    const skillsData = action.skillsData;\r\n    try {\r\n        const response = yield axios.post('/skills.json?auth=' + action.token, skillsData);\r\n        yield put(actions.submitSkillsSuccess(response.data.name));\r\n    } catch (error) {\r\n        yield put(actions.submitSkillsFail(error.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchSkillsSaga (action) {\r\n    yield put(actions.fetchSkillsStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/skills.json' + queryParams);\r\n        let fetchSkills = {};\r\n        for (let key in response.data) {\r\n            fetchSkills = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n\r\n        let skillsArray = [];\r\n        for (let key in fetchSkills) {\r\n            skillsArray.push({\r\n                [key]: fetchSkills[key]\r\n            })\r\n        }\r\n\r\n        let skillsArrayArrenge = [];\r\n        for (let i = 0; i <= (skillsArray.length - 1) / 2; i++) {\r\n            skillsArrayArrenge.push({\r\n                \"skill\": fetchSkills[\"skill_\" + i],\r\n                \"rate\": fetchSkills[\"rate_\" + i],\r\n                id: \"skill_\" + i\r\n            })\r\n        }\r\n        yield put(actions.fetchSkillsSuccess(skillsArrayArrenge));\r\n    } catch (err) {\r\n        yield put (actions.fetchSkillsFail(err.response.data.error));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitPortfolio (action) {\r\n    yield put(actions.submitPortfolioStart());\r\n    const portfolioData = action.portfolioData;\r\n    try {\r\n        const response = yield axios.post('/portfolio.json?auth=' +  action.token, portfolioData);\r\n        yield put(actions.submitPortfolioSuccess(response.data.name));\r\n    } catch (err) {\r\n        yield put(actions.submitPortfolioFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchPortfolio (action) {\r\n    yield put(actions.fetchPortfolioStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/portfolio.json' + queryParams);\r\n        let fetchPorts = {};\r\n        for (let key in response.data) {\r\n            fetchPorts = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n        let portsArray = [];\r\n        for(let key in fetchPorts) {\r\n            portsArray.push({\r\n                [key]: fetchPorts[key]\r\n            })\r\n        }\r\n\r\n        let portsArrayArrange = [];\r\n        for (let i = 0; i <=  (portsArray.length - 1) / 3; i++) {\r\n            portsArrayArrange.push({\r\n                \"link\": fetchPorts[\"link_\" + i],\r\n                \"thumbnail\" : fetchPorts[\"thumbnail_\" + i],\r\n                \"title\": fetchPorts[\"title_\" + i],\r\n                id: i\r\n            });\r\n        }\r\n        yield put(actions.fetchPortfolioSuccess(portsArrayArrange));\r\n    } catch(err) {\r\n        yield put(actions.fetchPortfolioFail(err.response.data.error));\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/indexActions';\r\nimport axios from '../../axios-order';\r\n\r\nexport function* submitResume (action) {\r\n    yield put(actions.submitResumeStart());\r\n    const resumeData = action.resumeData;\r\n    try {\r\n        const response = yield axios.post('/resume.json?auth=' + action.token, resumeData);\r\n        yield put(actions.submitResumeSuccess(response.data.name));\r\n    } catch (err) {\r\n        yield put (actions.submitResumeFail(err.response.data.error));\r\n    }\r\n}\r\n\r\nexport function* fetchResume (action) {\r\n    yield put(actions.fetchResumeStart());\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\r\n    try {\r\n        const response = yield axios.get('/resume.json' + queryParams);\r\n        let fetchResume = {};\r\n        for (let key in response.data) {\r\n            fetchResume = {\r\n                ...response.data[key].info\r\n            }\r\n        }\r\n\r\n        let resumeArray = [];\r\n        for (let key in fetchResume) {\r\n            resumeArray.push({\r\n                [key]: fetchResume[key]\r\n            });\r\n        }\r\n\r\n        let resumeArrayArrange = [];\r\n        for (let i = 0; i <= (resumeArray.length - 1) / 6; i++) {\r\n            resumeArrayArrange.push({\r\n                \"title\": fetchResume[\"title_\" + i],\r\n                \"company\": fetchResume[\"companyName_\" + i],\r\n                \"position\": fetchResume[\"position_\" + i],\r\n                \"from\": fetchResume[\"from_\" + i],\r\n                \"to\": fetchResume[\"to_\" + i],\r\n                \"description\": fetchResume[\"description_\" + i],\r\n                id: i\r\n            });\r\n        }\r\n        yield put(actions.fetchResumeSuccess(resumeArrayArrange));\r\n    } catch (err) {\r\n        yield put(actions.fetchResumeFail(err.response.data.error));\r\n    }\r\n}","import { takeEvery, all } from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport { authSaga, authLogout, authCheckTimeOut, authCheckState } from './authSaga';\r\nimport { submitData, fetchUserSaga } from './userSaga';\r\nimport { submitSkillsSaga, fetchSkillsSaga } from './skillsSaga';\r\nimport { submitPortfolio, fetchPortfolio } from './portfolioSaga';\r\nimport { submitResume, fetchResume } from './resumeSaga';\r\n\r\nexport function* watchAuth () {\r\n    yield all([\r\n        takeEvery(actionTypes.AUTH_USER, authSaga),\r\n        takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, authLogout),\r\n        takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, authCheckTimeOut),\r\n        takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckState),\r\n    ]);\r\n}\r\n\r\nexport function* watchPersonalData () {\r\n    yield takeEvery(actionTypes.SUBMIT_DATA, submitData);\r\n    yield takeEvery(actionTypes.FETCH_USER, fetchUserSaga);\r\n}\r\n\r\nexport function* watchSkillsData () {\r\n    yield takeEvery(actionTypes.SUBMIT_SKILLS, submitSkillsSaga);\r\n    yield takeEvery(actionTypes.FETCH_SKILLS, fetchSkillsSaga);\r\n}\r\n\r\nexport function* watchPortfolioData () {\r\n    yield takeEvery(actionTypes.SUBMIT_PORTFOLIO, submitPortfolio);\r\n    yield takeEvery(actionTypes.FETCH_PORTFOLIO, fetchPortfolio);\r\n}\r\n\r\nexport function* watchResumeData () {\r\n    yield takeEvery(actionTypes.SUBMIT_RESUME, submitResume);\r\n    yield takeEvery(actionTypes.FETCH_RESUME, fetchResume);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport authReducer from './store/reducers/authReducer';\nimport userReducer from './store/reducers/userReducer';\nimport skillsReducer from './store/reducers/skillsReducer';\nimport portfolioReducer from './store/reducers/portfolioReducer';\nimport resumeReducer from './store/reducers/resumeReducer';\nimport { watchAuth, watchPersonalData, watchSkillsData, watchPortfolioData, watchResumeData } from './store/sagas/indexSaga';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    skills: skillsReducer,\n    port: portfolioReducer,\n    resume: resumeReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n));\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchPersonalData);\nsagaMiddleware.run(watchSkillsData);\nsagaMiddleware.run(watchPortfolioData);\nsagaMiddleware.run(watchResumeData);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/choose-task.7652002d.jpeg\";"],"sourceRoot":""}